{"version":3,"file":"261.js","sources":["webpack://assets/./src/quiz/dates.ts"],"sourcesContent":["import { QuizDescriptorWithTime } from './quiz'\n\nconst reference = new Date(2023, 8, 2) // 2023-09-02. 8 is September, since months are 0-indexed for some fucking reason\n\nlet offsetForTesting = 0\nconst debugMillis = parseInt(localStorage.getItem('debug_quiz_transition') ?? '0')\nif (debugMillis > 0) {\n    // Simulates the quiz being 10 seconds from ending\n    const startOfDay = new Date()\n    startOfDay.setHours(0, 0, 0, 0)\n    offsetForTesting = (startOfDay.valueOf() + (24 * 60 * 60 * 1000) - debugMillis) - Date.now()\n}\n\nexport function getDailyOffsetNumber(): number {\n    // fractional days since reference\n    // today's date without the time\n    const today = new Date(Date.now() + offsetForTesting)\n    today.setHours(0, 0, 0, 0)\n    let offset = (today.valueOf() - reference.valueOf()) / (1000 * 60 * 60 * 24)\n    // round to nearest day. this handles daylight savings time, since it's always a midnight-to-midnight comparison.\n    // E.g., if it's 9/3 at 1am, the offset will be 9/3 at 0am - 9/2 at 0am = 1 day, which is correct.\n    // Similarly, if it's 11/11 at 1am, the offset will be\n    //      11/11 at 0am [NO DST] - 9/2 at 0am [DST] = (30 + 31 + 9) days + 1 hour = 70 days + 1 hour\n    //      which rounded to the nearest day is 70 days, which is correct.\n    offset = Math.round(offset)\n    return offset\n}\n\nexport function getRetrostatOffsetNumber(): number {\n    const daily = getDailyOffsetNumber()\n    // 78 through 84 --> 0\n    return Math.floor((daily - 1) / 7) - 11\n}\n\nfunction dayStart(offset: number): Date {\n    const date = new Date(reference)\n    date.setDate(date.getDate() + offset)\n    return date\n}\n\nfunction dayEnd(offset: number): number {\n    const start = dayStart(offset)\n    start.setDate(start.getDate() + 1)\n    return start.valueOf()\n}\n\nfunction weekStart(weekId: string): Date {\n    // check that week_id is W + number\n    if (!weekId.startsWith('W')) {\n        throw new Error('week_id must start with W')\n    }\n    const weekNumber = parseInt(weekId.slice(1))\n    return dayStart((weekNumber + 11) * 7 + 1)\n}\n\nfunction weekEnd(weekId: string): number {\n    const start = weekStart(weekId)\n    start.setDate(start.getDate() + 7)\n    return start.valueOf()\n}\n\nfunction timeToEndOfDay(offset: number): number {\n    return dayEnd(offset) - Date.now() - offsetForTesting\n}\n\nfunction timeToEndOfWeek(weekId: string): number {\n    return weekEnd(weekId) - Date.now()\n}\n\nfunction renderTimeWithinDay(ms: number): string {\n    // render HH:MM:SS from ms. Make sure to pad with 0s.\n    const seconds = Math.floor(ms / 1000)\n    const minutes = Math.floor(seconds / 60)\n    const hours = Math.floor(minutes / 60)\n    const secondRemainder = seconds % 60\n    const minutesRemainder = minutes % 60\n    const hoursRemainder = hours % 24\n\n    const secondsString = secondRemainder.toString().padStart(2, '0')\n    const minutesString = minutesRemainder.toString().padStart(2, '0')\n    const hoursString = hoursRemainder.toString().padStart(2, '0')\n\n    return `${hoursString}:${minutesString}:${secondsString}`\n}\n\nfunction renderTimeWithinWeek(ms: number): string {\n    // render X days, HH:MM:SS from ms. Make sure to pad with 0s.\n    const msPerDay = 1000 * 60 * 60 * 24\n    const days = Math.floor(ms / msPerDay)\n    const withoutDays = ms % msPerDay\n    const timeString = renderTimeWithinDay(withoutDays)\n    // const s_if_plural = days === 1 ? '' : 's';\n    return `${days}d ${timeString}`\n}\n\nexport function msRemaining({ kind, name }: QuizDescriptorWithTime): number {\n    switch (kind) {\n        case 'juxtastat':\n            return timeToEndOfDay(name)\n        case 'retrostat':\n            return timeToEndOfWeek(name)\n    }\n}\n\nexport function renderTimeRemaining({ kind, name }: QuizDescriptorWithTime): string {\n    switch (kind) {\n        case 'juxtastat':\n            return renderTimeWithinDay(timeToEndOfDay(name))\n        case 'retrostat':\n            return renderTimeWithinWeek(timeToEndOfWeek(name))\n    }\n}\n"],"names":["_localStorage_getItem","reference","Date","offsetForTesting","debugMillis","parseInt","startOfDay","getDailyOffsetNumber","today","offset","Math","getRetrostatOffsetNumber","daily","dayStart","date","timeToEndOfDay","start","dayEnd","timeToEndOfWeek","weekId","weekEnd","weekStart","Error","weekNumber","renderTimeWithinDay","ms","seconds","minutes","hours","secondsString","secondRemainder","minutesString","minutesRemainder","hoursString","hoursRemainder","msRemaining","param","kind","name","renderTimeRemaining","days","timeString"],"mappings":"8NAEA,IAG6BA,EAHvBC,EAAY,IAAIC,KAAK,KAAM,EAAG,GAEhCC,EAAmB,EACjBC,EAAcC,SAASL,MAAAA,CAAAA,EAAAA,aAAa,OAAO,CAAC,wBAAuB,EAA5CA,EAAiD,KAC9E,GAAII,EAAc,EAAG,CAEjB,IAAME,EAAa,IAAIJ,KACvBI,EAAW,QAAQ,CAAC,EAAG,EAAG,EAAG,GAC7BH,EAAoBG,EAAW,OAAO,GAAM,MAAuBF,EAAeF,KAAK,GAAG,EAC9F,CAEO,SAASK,IAGZ,IAAMC,EAAQ,IAAIN,KAAKA,KAAK,GAAG,GAAKC,GACpCK,EAAM,QAAQ,CAAC,EAAG,EAAG,EAAG,GACxB,IAAIC,EAAUD,AAAAA,CAAAA,EAAM,OAAO,GAAKP,EAAU,OAAO,EAAC,EAAM,MAOxD,OADSS,KAAK,KAAK,CAACD,EAExB,CAEO,SAASE,IAGZ,OAAOD,KAAK,KAAK,CAAEE,AAAAA,CAFLL,IAEa,GAAK,GAAK,EACzC,CAEA,SAASM,EAASJ,CAAc,EAC5B,IAAMK,EAAO,IAAIZ,KAAKD,GAEtB,OADAa,EAAK,OAAO,CAACA,EAAK,OAAO,GAAKL,GACvBK,CACX,CAuBA,SAASC,EAAeN,CAAc,MApB5BO,EAqBN,MAAOC,AApBPD,CADMA,EAAQH,EAqBAJ,IApBR,OAAO,CAACO,EAAM,OAAO,GAAK,GAoBzBC,AAnBAD,EAAM,OAAO,GAmBId,KAAK,GAAG,GAAKC,CACzC,CAEA,SAASe,EAAgBC,CAAc,MAT7BH,EAUN,MAAOI,AATPJ,CADMA,EAAQK,AAVlB,SAAmBF,CAAc,EAE7B,GAAI,CAACA,EAAO,UAAU,CAAC,KACnB,MAAM,AAAIG,MAAM,6BAGpB,OAAOT,EAAUU,AAAAA,CADElB,SAASc,EAAO,KAAK,CAAC,IACX,EAAC,EAAK,EAAI,EAC5C,EAamBA,IATT,OAAO,CAACH,EAAM,OAAO,GAAK,GACzBA,EAAM,OAAO,GAQKd,KAAK,GAAG,EACrC,CAEA,SAASsB,EAAoBC,CAAU,EAEnC,IAAMC,EAAUhB,KAAK,KAAK,CAACe,EAAK,KAC1BE,EAAUjB,KAAK,KAAK,CAACgB,EAAU,IAC/BE,EAAQlB,KAAK,KAAK,CAACiB,EAAU,IAK7BE,EAAgBC,AAJEJ,CAAAA,EAAU,EAAC,EAIG,QAAQ,GAAG,QAAQ,CAAC,EAAG,KACvDK,EAAgBC,AAJGL,CAAAA,EAAU,EAAC,EAIG,QAAQ,GAAG,QAAQ,CAAC,EAAG,KACxDM,EAAcC,AAJGN,CAAAA,EAAQ,EAAC,EAIG,QAAQ,GAAG,QAAQ,CAAC,EAAG,KAE1D,MAAQ,GAAiBG,MAAAA,CAAfE,EAAY,KAAoBJ,MAAAA,CAAjBE,EAAc,KAAiB,OAAdF,EAC9C,CAYO,SAASM,EAAYC,CAAsC,E,IAApCC,EAAFD,EAAEC,IAAI,CAAEC,EAARF,EAAQE,IAAI,CACpC,OAAQD,GACJ,IAAK,YACD,OAAOtB,EAAeuB,EAC1B,KAAK,YACD,OAAOpB,EAAgBoB,EAC/B,CACJ,CAEO,SAASC,EAAoBH,CAAsC,E,IAnB5CX,EAGpBe,EAEAC,EAc4BJ,EAAFD,EAAEC,IAAI,CAAEC,EAARF,EAAQE,IAAI,CAC5C,OAAQD,GACJ,IAAK,YACD,OAAOb,EAAoBT,EAAeuB,GAC9C,KAAK,YACD,OArBFE,EAAO9B,KAAK,KAAK,CAACe,CAHEA,EAwBUP,EAAgBoB,IAtBnC,OAGXG,EAAajB,EADCC,EAFH,OAKT,GAAWgB,MAAAA,CAATD,EAAK,MAAe,OAAXC,EAkBnB,CACJ,C"}