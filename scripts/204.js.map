{"version":3,"file":"204.js","sources":["webpack://assets/./src/quiz/AuthenticationStateMachine.ts","webpack://assets/./src/utils/retry.ts","webpack://assets/./src/utils/urbanstats-persistent-client.ts"],"sourcesContent":["import { generateCodeVerifier, OAuth2Client } from '@badgateway/oauth2-client'\nimport { useEffect, useState } from 'react'\nimport { z } from 'zod'\n\nimport { PageDescriptor, urlFromPageDescriptor } from '../navigation/PageDescriptor'\nimport { TestUtils } from '../utils/TestUtils'\nimport { retry } from '../utils/retry'\nimport { persistentClient } from '../utils/urbanstats-persistent-client'\n\nimport { QuizModel } from './quiz'\nimport { AuthenticationError, syncWithGoogleDrive } from './sync'\n\nconst tokenSchema = z.object({\n    accessToken: z.string(),\n    refreshToken: z.string(),\n    expiresAt: z.number(),\n})\n\nconst stateSchema = z.discriminatedUnion('state', [\n    z.object({ state: z.literal('signedOut'), email: z.nullable(z.string()) }),\n    z.object({\n        state: z.literal('signedIn'), token: tokenSchema, email: z.string(), persistentId: z.string(),\n    }),\n])\n\ntype State = z.TypeOf<typeof stateSchema>\n\nconst localStorageKey = 'quizAuthenticationState'\n\nconst codeVerifierKey = 'codeVerifier'\n\nconst googleClient = new OAuth2Client({\n    server: 'https://accounts.google.com',\n    clientId: '866758015458-r7t30bm7b492c1mevid587apej6cjte6.apps.googleusercontent.com',\n    /*\n    NOTE! A client secret does not necessarily need to be kept secret in a browser application.\n    It is used to authenticate the client to the authorization server, and is not used to authenticate the user.\n    For an example of a client secret in plaintext in a github repository, see:\n    https://github.com/google/clasp/blob/aa375c5f589b6065828be22f917b8a9934a748db/src/auth/file_credential_store.ts#L108\n    */\n    clientSecret: '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',\n    discoveryEndpoint: '/.well-known/openid-configuration',\n})\n\nconst redirectUri = urlFromPageDescriptor({ kind: 'oauthCallback', params: {} }).toString()\n\nfunction loadState(): State {\n    const item = localStorage.getItem(localStorageKey)\n    if (item !== null) {\n        const parseResult = stateSchema.safeParse(JSON.parse(item))\n        if (parseResult.success) {\n            return parseResult.data\n        }\n        else {\n            console.error(`Failed to parse ${localStorageKey}, using default state`, parseResult.error)\n        }\n    }\n    return { state: 'signedOut', email: null }\n}\n\nexport class AuthenticationStateMachine {\n    static shared = new AuthenticationStateMachine()\n\n    private _state: State\n\n    get state(): State {\n        return this._state\n    }\n\n    private setState(newState: State): void {\n        this._state = newState\n        localStorage.setItem(localStorageKey, JSON.stringify(newState))\n        this.stateObservers.forEach((observer) => { observer() })\n    }\n\n    private stateObservers = new Set<() => void>()\n\n    /* eslint-disable react-hooks/rules-of-hooks -- Custom hook method */\n    useState(): State {\n        const [, setCounter] = useState(0)\n        useEffect(() => {\n            const observer = (): void => {\n                setCounter(counter => counter + 1)\n            }\n            this.stateObservers.add(observer)\n            return () => {\n                this.stateObservers.delete(observer)\n            }\n        }, [])\n        return this._state\n    }\n    /* eslint-enable react-hooks/rules-of-hooks */\n\n    private isSyncing = false\n\n    private constructor() {\n        this._state = loadState()\n        addEventListener('storage', (event) => {\n            if (event.key === localStorageKey) {\n                this._state = loadState()\n                this.stateObservers.forEach((observer) => { observer() })\n            }\n        })\n\n        QuizModel.shared.uniquePersistentId.observers.add(() => this.syncEmailAssociation())\n\n        void this.syncEmailAssociation()\n\n        let syncTimeout: ReturnType<typeof setTimeout> | undefined\n        const syncDelay = 1000\n\n        const obeserver = (): void => {\n            if (!this.isSyncing) {\n                clearTimeout(syncTimeout)\n                syncTimeout = setTimeout(() => this.syncProfile(), syncDelay)\n            }\n        }\n\n        QuizModel.shared.history.observers.add(obeserver)\n        QuizModel.shared.friends.observers.add(obeserver)\n\n        window.addEventListener('focus', obeserver)\n\n        void this.syncProfile().catch((e: unknown) => {\n            console.error('Error syncing profile', e)\n        })\n    }\n\n    private async syncProfile(token?: string): Promise<void> {\n        TestUtils.shared.testSyncing = true\n        if (token === undefined) {\n            token = await this.getAccessToken()\n        }\n        if (token === undefined) {\n            return\n        }\n        try {\n            this.isSyncing = true\n            await syncWithGoogleDrive(token)\n        }\n        catch (e) {\n            if (e instanceof AuthenticationError) {\n                this.authenticationError()\n            }\n            throw e\n        }\n        finally {\n            this.isSyncing = false\n            TestUtils.shared.testSyncing = false\n        }\n    }\n\n    private async syncEmailAssociation(): Promise<void> {\n        if (this._state.state === 'signedIn' && QuizModel.shared.uniquePersistentId.value !== this._state.persistentId) {\n            await this.userSignOut()\n            return\n        }\n\n        const { data } = await persistentClient.GET('/juxtastat/email', { params: { header: QuizModel.shared.userHeaders() } })\n        if (data) {\n            if (data.email !== null && this._state.state === 'signedOut') {\n                await this.userSignOut() // dissociates email\n                return\n            }\n            const accessToken = await this.getAccessToken()\n            if (data.email === null && accessToken !== undefined) {\n                await this.associateEmail(accessToken)\n            }\n        }\n    }\n\n    // Returns a URL for the user to visit\n    async startSignIn(): Promise<{ start: () => void }> {\n        const codeVerifier = await generateCodeVerifier()\n        const signInUrl = await googleClient.authorizationCode.getAuthorizeUri({\n            redirectUri,\n            codeVerifier,\n            scope: ['email', 'https://www.googleapis.com/auth/drive.appdata'],\n            extraParams: {\n                access_type: 'offline',\n                prompt: 'consent',\n            },\n        })\n        return { start: () => {\n            window.open(signInUrl, '_blank', 'popup,width=500,height=600')\n            localStorage.setItem(codeVerifierKey, codeVerifier)\n        } }\n    }\n\n    // Need this fancy hook because you'll trigger the pop up blocker if open the window after `await`ing\n    /* eslint-disable react-hooks/rules-of-hooks -- Custom hook method */\n    useStartSignIn(): undefined | (() => void) {\n        const [startSignIn, setStartSignIn] = useState<Awaited<ReturnType<typeof this.startSignIn>> | undefined>(undefined)\n\n        useEffect(() => {\n            void this.startSignIn().then(setStartSignIn)\n        }, [])\n\n        return startSignIn?.start\n    }\n    /* eslint-enable react-hooks/rules-of-hooks */\n\n    async completeSignIn(descriptor: Extract<PageDescriptor, { kind: 'oauthCallback' }>): Promise<void> {\n        if (this._state.state !== 'signedOut') {\n            throw new Error('Already signed in')\n        }\n        const url = urlFromPageDescriptor(descriptor)\n        const codeVerifier = localStorage.getItem(codeVerifierKey)\n        if (codeVerifier === null) {\n            throw new Error('No code verifier was stored')\n        }\n        localStorage.removeItem(codeVerifierKey)\n\n        const rawToken = await retry(2, () => googleClient.authorizationCode.getTokenFromCodeRedirect(url, {\n            redirectUri,\n            codeVerifier,\n        }))\n\n        const token = tokenSchema.parse(rawToken)\n\n        const email = await this.associateEmail(token.accessToken)\n\n        await this.syncProfile(token.accessToken)\n\n        this.setState({\n            state: 'signedIn',\n            token: { refreshToken: token.refreshToken, accessToken: token.accessToken, expiresAt: token.expiresAt },\n            email,\n            persistentId: QuizModel.shared.uniquePersistentId.value,\n        })\n    }\n\n    private async associateEmail(accessToken: string): Promise<string> {\n        const { response, data } = await persistentClient.POST('/juxtastat/associate_email', {\n            params: {\n                header: {\n                    ...QuizModel.shared.userHeaders(),\n                },\n            },\n            body: { token: accessToken },\n        })\n        if (data) {\n            return data.email\n        }\n        switch (response.status) {\n            case 409:\n                throw new Error('This device is already associated with a different email.')\n            default:\n                throw new Error(`Unknown error from server: ${response.status}`)\n        }\n    }\n\n    authenticationError(): void {\n        this.setState({ state: 'signedOut', email: this._state.email })\n    }\n\n    async userSignOut(): Promise<void> {\n        const { error } = await persistentClient.POST('/juxtastat/dissociate_email', {\n            params: { header: QuizModel.shared.userHeaders() },\n        })\n        if (!error) {\n            this.setState({ state: 'signedOut', email: null })\n        }\n    }\n\n    async getAccessToken(): Promise<string | undefined> {\n        if (this._state.state === 'signedOut') {\n            return undefined\n        }\n\n        if (Date.now() + 10_000 < this._state.token.expiresAt) {\n            return this._state.token.accessToken\n        }\n\n        try {\n            const newToken = tokenSchema.parse(await googleClient.refreshToken(this._state.token))\n            this.setState({ ...this._state, token: newToken })\n            return newToken.accessToken\n        }\n        catch (error) {\n            console.error('Error while refreshing access token', error)\n            this.authenticationError()\n            return undefined\n        }\n    }\n}\n","export async function retry<T>(retries: number, fn: () => Promise<T>): Promise<T> {\n    while (true) {\n        try {\n            return await fn()\n        }\n        catch (error) {\n            retries--\n            if (retries > 0) {\n                console.warn('Retrying...', error)\n            }\n            else {\n                throw error\n            }\n        }\n    }\n}\n","import createClient from 'openapi-fetch'\n\nimport { QuizModel } from '../quiz/quiz'\n\nimport { TestUtils } from './TestUtils'\nimport type { paths } from './urbanstats-persistent-data' // generated by openapi-typescript\n\nexport const persistentClient = createClient<paths>({ baseUrl: TestUtils.shared.isTesting ? 'http://localhost:54579' : 'https://persistent.urbanstats.org', async fetch(input) {\n    const response = await globalThis.fetch(input)\n    if (response.status === 401) {\n        QuizModel.shared.authenticationError.value = true\n    }\n    return response\n} })\n"],"names":["tokenSchema","z","stateSchema","localStorageKey","codeVerifierKey","googleClient","OAuth2Client","redirectUri","urlFromPageDescriptor","loadState","item","localStorage","parseResult","JSON","console","AuthenticationStateMachine","syncTimeout","Set","addEventListener","event","observer","QuizModel","obeserver","clearTimeout","setTimeout","window","e","setState","newState","useState1","setCounter","_useState","useEffect","counter","syncProfile","token","TestUtils","undefined","syncWithGoogleDrive","AuthenticationError","syncEmailAssociation","data","accessToken","persistentClient","startSignIn","codeVerifier","signInUrl","generateCodeVerifier","useStartSignIn","setStartSignIn","completeSignIn","descriptor","url","rawToken","email","retries","fn","Error","error","associateEmail","_ref","response","authenticationError","userSignOut","getAccessToken","newToken","Date","createClient","fetch","input","globalThis"],"mappings":"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"}