{"version":3,"file":"958.js","sources":["webpack://assets/./node_modules/color-string/node_modules/color-name/index.js","webpack://assets/./node_modules/color-string/index.js","webpack://assets/./node_modules/color/node_modules/color-name/index.js","webpack://assets/./node_modules/color/node_modules/color-convert/conversions.js","webpack://assets/./node_modules/color/node_modules/color-convert/index.js","webpack://assets/./node_modules/color/node_modules/color-convert/route.js","webpack://assets/./node_modules/color/index.js"],"sourcesContent":["export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","import colorNames from 'color-name';\n\nconst reverseNames = Object.create(null);\n\n// Create a list of reverse color names\nfor (const name in colorNames) {\n\tif (Object.hasOwn(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nconst cs = {\n\tto: {},\n\tget: {},\n};\n\ncs.get = function (string) {\n\tconst prefix = string.slice(0, 3).toLowerCase();\n\tlet value;\n\tlet model;\n\tswitch (prefix) {\n\t\tcase 'hsl': {\n\t\t\tvalue = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'hwb': {\n\t\t\tvalue = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault: {\n\t\t\tvalue = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!value) {\n\t\treturn null;\n\t}\n\n\treturn {model, value};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst abbr = /^#([a-f\\d]{3,4})$/i;\n\tconst hex = /^#([a-f\\d]{6})([a-f\\d]{2})?$/i;\n\tconst rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|/]\\s*([+-]?[\\d.]+)(%?)\\s*)?\\)$/;\n\tconst per = /^rgba?\\(\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*(?:[,|/]\\s*([+-]?[\\d.]+)(%?)\\s*)?\\)$/;\n\tconst keyword = /^(\\w+)$/;\n\n\tlet rgb = [0, 0, 0, 1];\n\tlet match;\n\tlet i;\n\tlet hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tconst i2 = i * 2;\n\t\t\trgb[i] = Number.parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Number.parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Number.parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Number.parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Number.parseInt(match[i + 1], 10);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = match[5] ? Number.parseFloat(match[4]) * 0.01 : Number.parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(Number.parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = match[5] ? Number.parseFloat(match[4]) * 0.01 : Number.parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!Object.hasOwn(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*(?:[,|/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tconst match = string.match(hsl);\n\n\tif (match) {\n\t\tconst alpha = Number.parseFloat(match[4]);\n\t\tconst h = ((Number.parseFloat(match[1]) % 360) + 360) % 360;\n\t\tconst s = clamp(Number.parseFloat(match[2]), 0, 100);\n\t\tconst l = clamp(Number.parseFloat(match[3]), 0, 100);\n\t\tconst a = clamp(Number.isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tconst match = string.match(hwb);\n\n\tif (match) {\n\t\tconst alpha = Number.parseFloat(match[4]);\n\t\tconst h = ((Number.parseFloat(match[1]) % 360) + 360) % 360;\n\t\tconst w = clamp(Number.parseFloat(match[2]), 0, 100);\n\t\tconst b = clamp(Number.parseFloat(match[3]), 0, 100);\n\t\tconst a = clamp(Number.isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function (...rgba) {\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function (...rgba) {\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function (...rgba) {\n\tconst r = Math.round(rgba[0] / 255 * 100);\n\tconst g = Math.round(rgba[1] / 255 * 100);\n\tconst b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function (...hsla) {\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// Hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function (...hwba) {\n\tlet a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (...rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// Helpers\nfunction clamp(number_, min, max) {\n\treturn Math.min(Math.max(min, number_), max);\n}\n\nfunction hexDouble(number_) {\n\tconst string_ = Math.round(number_).toString(16).toUpperCase();\n\treturn (string_.length < 2) ? '0' + string_ : string_;\n}\n\nexport default cs;\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nimport cssKeywords from 'color-name';\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\toklab: {channels: 3, labels: ['okl', 'oka', 'okb']},\n\tlch: {channels: 3, labels: 'lch'},\n\toklch: {channels: 3, labels: ['okl', 'okc', 'okh']},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']},\n};\n\nexport default convert;\n\n// LAB f(t) constant\nconst LAB_FT = (6 / 29) ** 3;\n\n// SRGB non-linear transform functions\nfunction srgbNonlinearTransform(c) {\n\tconst cc = c > 0.003_130_8\n\t\t? ((1.055 * (c ** (1 / 2.4))) - 0.055)\n\t\t: c * 12.92;\n\treturn Math.min(Math.max(0, cc), 1);\n}\n\nfunction srgbNonlinearTransformInv(c) {\n\treturn c > 0.040_45 ? (((c + 0.055) / 1.055) ** 2.4) : (c / 12.92);\n}\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tswitch (max) {\n\t\tcase min: {\n\t\t\th = 0;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase r: {\n\t\t\th = (g - b) / delta;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase g: {\n\t\t\th = 2 + (b - r) / delta;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase b: {\n\t\t\th = 4 + (r - g) / delta;\n\n\t\t\tbreak;\n\t\t}\n\t// No default\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tswitch (v) {\n\t\t\tcase r: {\n\t\t\t\th = bdif - gdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase g: {\n\t\t\t\th = (1 / 3) + rdif - bdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase b: {\n\t\t\t\th = (2 / 3) + gdif - rdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t// No default\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100,\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.oklab = function (rgb) {\n\t// Assume sRGB\n\tconst r = srgbNonlinearTransformInv(rgb[0] / 255);\n\tconst g = srgbNonlinearTransformInv(rgb[1] / 255);\n\tconst b = srgbNonlinearTransformInv(rgb[2] / 255);\n\n\tconst lp = Math.cbrt(0.412_221_470_8 * r + 0.536_332_536_3 * g + 0.051_445_992_9 * b);\n\tconst mp = Math.cbrt(0.211_903_498_2 * r + 0.680_699_545_1 * g + 0.107_396_956_6 * b);\n\tconst sp = Math.cbrt(0.088_302_461_9 * r + 0.281_718_837_6 * g + 0.629_978_700_5 * b);\n\n\tconst l = 0.210_454_255_3 * lp + 0.793_617_785 * mp - 0.004_072_046_8 * sp;\n\tconst aa = 1.977_998_495_1 * lp - 2.428_592_205 * mp + 0.450_593_709_9 * sp;\n\tconst bb = 0.025_904_037_1 * lp + 0.782_771_766_2 * mp - 0.808_675_766 * sp;\n\n\treturn [l * 100, aa * 100, bb * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Number.POSITIVE_INFINITY;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\t// Assume sRGB\n\tconst r = srgbNonlinearTransformInv(rgb[0] / 255);\n\tconst g = srgbNonlinearTransformInv(rgb[1] / 255);\n\tconst b = srgbNonlinearTransformInv(rgb[2] / 255);\n\n\tconst x = (r * 0.412_456_4) + (g * 0.357_576_1) + (b * 0.180_437_5);\n\tconst y = (r * 0.212_672_9) + (g * 0.715_152_2) + (b * 0.072_175);\n\tconst z = (r * 0.019_333_9) + (g * 0.119_192) + (b * 0.950_304_1);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > LAB_FT ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > LAB_FT ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > LAB_FT ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t3;\n\tlet value;\n\n\tif (s === 0) {\n\t\tvalue = l * 255;\n\t\treturn [value, value, value];\n\t}\n\n\tconst t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tvalue = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tvalue = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tvalue = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tvalue = t1;\n\t\t}\n\n\t\trgb[i] = value * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0: {\n\t\t\treturn [v, t, p];\n\t\t}\n\n\t\tcase 1: {\n\t\t\treturn [q, v, p];\n\t\t}\n\n\t\tcase 2: {\n\t\t\treturn [p, v, t];\n\t\t}\n\n\t\tcase 3: {\n\t\t\treturn [p, q, v];\n\t\t}\n\n\t\tcase 4: {\n\t\t\treturn [t, p, v];\n\t\t}\n\n\t\tcase 5: {\n\t\t\treturn [v, p, q];\n\t\t}\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\t// eslint-disable-next-line no-bitwise\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces, default-case-last */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: { r = v;  g = n;  b = wh; break;\n\t\t}\n\n\t\tcase 1: { r = n;  g = v;  b = wh; break;\n\t\t}\n\n\t\tcase 2: { r = wh; g = v;  b = n; break;\n\t\t}\n\n\t\tcase 3: { r = wh; g = n;  b = v; break;\n\t\t}\n\n\t\tcase 4: { r = n;  g = wh; b = v; break;\n\t\t}\n\n\t\tcase 5: { r = v;  g = wh; b = n; break;\n\t\t}\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces, default-case-last */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.240_454_2) + (y * -1.537_138_5) + (z * -0.498_531_4);\n\tg = (x * -0.969_266) + (y * 1.876_010_8) + (z * 0.041_556);\n\tb = (x * 0.055_643_4) + (y * -0.204_025_9) + (z * 1.057_225_2);\n\n\t// Assume sRGB\n\tr = srgbNonlinearTransform(r);\n\tg = srgbNonlinearTransform(g);\n\tb = srgbNonlinearTransform(b);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > LAB_FT ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > LAB_FT ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > LAB_FT ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.xyz.oklab = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\n\tconst lp = Math.cbrt(0.818_933_010_1 * x + 0.361_866_742_4 * y - 0.128_859_713_7 * z);\n\tconst mp = Math.cbrt(0.032_984_543_6 * x + 0.929_311_871_5 * y + 0.036_145_638_7 * z);\n\tconst sp = Math.cbrt(0.048_200_301_8 * x + 0.264_366_269_1 * y + 0.633_851_707 * z);\n\n\tconst l = 0.210_454_255_3 * lp + 0.793_617_785 * mp - 0.004_072_046_8 * sp;\n\tconst a = 1.977_998_495_1 * lp - 2.428_592_205 * mp + 0.450_593_709_9 * sp;\n\tconst b = 0.025_904_037_1 * lp + 0.782_771_766_2 * mp - 0.808_675_766 * sp;\n\n\treturn [l * 100, a * 100, b * 100];\n};\n\nconvert.oklab.oklch = function (oklab) {\n\treturn convert.lab.lch(oklab);\n};\n\nconvert.oklab.xyz = function (oklab) {\n\tconst ll = oklab[0] / 100;\n\tconst a = oklab[1] / 100;\n\tconst b = oklab[2] / 100;\n\n\tconst l = (0.999_999_998 * ll + 0.396_337_792 * a + 0.215_803_758 * b) ** 3;\n\tconst m = (1.000_000_008 * ll - 0.105_561_342 * a - 0.063_854_175 * b) ** 3;\n\tconst s = (1.000_000_055 * ll - 0.089_484_182 * a - 1.291_485_538 * b) ** 3;\n\n\tconst x = 1.227_013_851 * l - 0.557_799_98 * m + 0.281_256_149 * s;\n\tconst y = -0.040_580_178 * l + 1.112_256_87 * m - 0.071_676_679 * s;\n\tconst z = -0.076_381_285 * l - 0.421_481_978 * m + 1.586_163_22 * s;\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.oklab.rgb = function (oklab) {\n\tconst ll = oklab[0] / 100;\n\tconst aa = oklab[1] / 100;\n\tconst bb = oklab[2] / 100;\n\n\tconst l = (ll + 0.396_337_777_4 * aa + 0.215_803_757_3 * bb) ** 3;\n\tconst m = (ll - 0.105_561_345_8 * aa - 0.063_854_172_8 * bb) ** 3;\n\tconst s = (ll - 0.089_484_177_5 * aa - 1.291_485_548 * bb) ** 3;\n\n\t// Assume sRGB\n\tconst r = srgbNonlinearTransform(4.076_741_662_1 * l - 3.307_711_591_3 * m + 0.230_969_929_2 * s);\n\tconst g = srgbNonlinearTransform(-1.268_438_004_6 * l + 2.609_757_401_1 * m - 0.341_319_396_5 * s);\n\tconst b = srgbNonlinearTransform(-0.004_196_086_3 * l - 0.703_418_614_7 * m + 1.707_614_701 * s);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.oklch.oklab = function (oklch) {\n\treturn convert.lch.lab(oklch);\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > LAB_FT ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > LAB_FT ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > LAB_FT ? z2 : (z - 16 / 116) / 7.787;\n\n\t// Illuminant D65 XYZ Tristrimulus Values\n\t// https://en.wikipedia.org/wiki/CIE_1931_color_space\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t/* eslint-disable no-bitwise */\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\t\t/* eslint-enable no-bitwise */\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\t// eslint-disable-next-line no-bitwise\n\tif (r >> 4 === g >> 4 && g >> 4 === b >> 4) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\targs = args[0];\n\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (Math.trunc(args > 50) + 1) * 0.5;\n\t/* eslint-disable no-bitwise */\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\t/* eslint-enable no-bitwise */\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\targs = args[0];\n\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\t/* eslint-disable no-bitwise */\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\t/* eslint-enable no-bitwise */\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.slice(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f\\d]{6}|[a-f\\d]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = [...colorString].map(char => char + char).join('');\n\t}\n\n\tconst integer = Number.parseInt(colorString, 16);\n\t/* eslint-disable no-bitwise */\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\t/* eslint-enable no-bitwise */\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet hue;\n\n\tconst grayscale = chroma < 1 ? min / (1 - chroma) : 0;\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else if (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else if (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2 * s * l) : (2 * s * (1 - l));\n\n\tlet f = 0;\n\tif (c < 1) {\n\t\tf = (l - 0.5 * c) / (1 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0: {\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\t}\n\n\t\tcase 1: {\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\t}\n\n\t\tcase 2: {\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\t}\n\n\t\tcase 3: {\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\t}\n\n\t\tcase 4: {\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\t}\n\n\t\tdefault: {\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t\t}\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255,\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1 - c);\n\tlet f = 0;\n\n\tif (v > 0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else if (l >= 0.5 && l < 1) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65_535) * 255, (apple[1] / 65_535) * 255, (apple[2] / 65_535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65_535, (rgb[1] / 255) * 65_535, (rgb[2] / 255) * 65_535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\t/* eslint-disable no-bitwise */\n\tconst value = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (value << 16) + (value << 8) + value;\n\t/* eslint-enable no-bitwise */\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.slice(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst value = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [value / 255 * 100];\n};\n","import conversions from './conversions.js';\nimport route from './route.js';\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let {length} = result, i = 0; i < length; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfor (const fromModel of models) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\tfor (const toModel of routeModels) {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t}\n}\n\nexport default convert;\n","import conversions from './conversions.js';\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let {length} = models, i = 0; i < length; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null,\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length > 0) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let {length} = adjacents, i = 0; i < length; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nfunction route(fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let {length} = models, i = 0; i < length; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n}\n\nexport default route;\n","import colorString from 'color-string';\nimport convert from 'color-convert';\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst arguments_ = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](...arguments_);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst arguments_ = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(...arguments_);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(...this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(...rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_colour_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...arguments_) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments_.length > 0) {\n\t\t\treturn new Color(arguments_, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...arguments_) {\n\t\tlet color = arguments_[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(arguments_, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] ||= [])[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nexport default Color;\n"],"names":["reverseNames","Object","name","colorNames","cs","clamp","number_","min","max","Math","hexDouble","string_","string","value","model","match","i","hexAlpha","rgb","i2","Number","alpha","_key","rgba","r","g","b","hsla","hwba","a","reverseKeywords","_iteratorError","cssKeywords","key","convert","LAB_FT","srgbNonlinearTransform","c","srgbNonlinearTransformInv","_iteratorError1","Error","_convert_model","channels","labels","h","delta","l","s","rdif","gdif","bdif","v","diff","diffc","w","lp","mp","sp","aa","bb","k","m","y","reversed","currentClosestDistance","currentClosestKeyword","keyword","distance","x","z","xyz","hsl","t3","t2","t1","smin","lmin","sv","hsv","hi","f","p","q","t","sl","vmin","hwb","wh","bl","ratio","n","cmyk","oklab","ll","oklch","lab","y2","x2","z2","hr","lch","args","saturation","_args","ansi","color","mult","rem","integer","colorString","char","hue","chroma","grayscale","hcg","pure","mg","apple","gray","models","fromModel","conversions","routes","route","graph","deriveBFS","buildGraph","length","queue","current","adjacents","adjacent","node","conversion","toModel","wrapConversion","path","fn","cur","link","from","to","routeModels","wrapRounded","wrappedFn","arg0","result","_type_of","wrapRaw","skippedModels","hashedModelKeys","limiters","Color","object","_instanceof","newArray","Array","zeroArray","keys","hashedKeys","JSON","limit","toString","toJSON","places","_colorString_to","self","arguments_","percentString","_colorString_to_rgb","array","unitArray","unitObject","round","number","undefined","getset","maxfn","hex","hexa","rgbArray","alphaHex","rgbNumber","luminosity","lum","chan","element","contrast","color2","lum1","lum2","level","contrastRatio","isDark","yiq","isLight","negate","lighten","darken","saturate","desaturate","whiten","blacken","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","channel","modifier","_limiters","_m"],"mappings":"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"}