{"version":3,"file":"123.js","sources":["webpack://assets/./src/components/statistic-panel.tsx","webpack://assets/./src/data/universes_ordered.ts"],"sourcesContent":["import React, { ChangeEvent, CSSProperties, ReactNode, useContext, useEffect, useMemo, useRef, useState } from 'react'\n\nimport universes_ordered from '../data/universes_ordered'\nimport { Navigator } from '../navigation/Navigator'\nimport { sanitize, statisticDescriptor } from '../navigation/links'\nimport { useColors } from '../page_template/colors'\nimport { useSetting } from '../page_template/settings'\nimport { StatName } from '../page_template/statistic-tree'\nimport { PageTemplate } from '../page_template/template'\nimport '../common.css'\nimport './article.css'\nimport { useUniverse } from '../universe'\nimport { useHeaderTextClass, useSubHeaderTextClass } from '../utils/responsive'\nimport { displayType } from '../utils/text'\n\nimport { CountsByUT } from './countsByArticleType'\nimport { forType, StatCol } from './load-article'\nimport { Percentile, PointerArrow, Statistic } from './table'\n\nconst tableStyle = { display: 'flex', flexDirection: 'column', padding: '1px' } as const\nconst columnNames = ['Ordinal', 'Name', 'Value', '', 'Percentile']\nconst columnWidths = ['15%', '60%', '20%', '10%', '20%']\nconst columnStyles = [\n    { textAlign: 'right', paddingRight: '1em' },\n    { textAlign: 'left' },\n    { textAlign: 'right' },\n    { textAlign: 'left' },\n    { textAlign: 'right' },\n] as const\n\nexport interface StatisticPanelProps {\n    start: number\n    amount: number\n    count: number\n    order: 'ascending' | 'descending'\n    joinedString: string\n    statcol: StatCol\n    statname: StatName\n    articleType: string\n    articleNames: string[]\n    highlight: string | undefined\n    renderedStatname: string\n    data: {\n        value: number[]\n        populationPercentile: number[]\n    }\n    explanationPage: string\n    counts: CountsByUT\n}\n\nexport function StatisticPanel(props: StatisticPanelProps): ReactNode {\n    const colors = useColors()\n    const headersRef = useRef<HTMLDivElement>(null)\n    const tableRef = useRef<HTMLDivElement>(null)\n\n    const isAscending = props.order === 'ascending'\n\n    const navContext = useContext(Navigator.Context)\n\n    const indexRange = useMemo(() => {\n        const start = props.start - 1\n        let end = start + props.amount\n        if (end + props.amount > props.count) {\n            end = props.count\n        }\n        const total = props.count\n        const result = Array.from({ length: end - start }, (_, i) => {\n            if (isAscending) {\n                return total - start - i - 1\n            }\n            return start + i\n        })\n        return result\n    }, [props.start, props.amount, props.count, isAscending])\n\n    const swapAscendingDescending = (currentUniverse: string | undefined): void => {\n        const newOrder = isAscending ? 'descending' : 'ascending'\n        void navContext.navigate(statisticDescriptor({\n            universe: currentUniverse,\n            statname: props.statname,\n            articleType: props.articleType,\n            start: 1,\n            amount: props.amount,\n            order: newOrder,\n        }), {\n            history: 'push',\n            scroll: { kind: 'none' },\n        })\n    }\n\n    const backgroundColor = (rowIdx: number): string => {\n        if (rowIdx > 0) {\n            const nameAtIdx = props.articleNames[indexRange[rowIdx - 1]]\n            if (nameAtIdx === props.highlight) {\n                return colors.highlight\n            }\n        }\n        if (rowIdx % 2 === 1) {\n            return colors.slightlyDifferentBackground\n        }\n        return colors.background\n    }\n\n    const style = (colIdx: number, rowIdx: number): CSSProperties => {\n        let result: CSSProperties = { ...tableStyle }\n        if (rowIdx === 0) {\n            // header, add a line at the bottom\n            result.borderBottom = `1px solid ${colors.textMain}`\n            result.fontWeight = 500\n        }\n        result.backgroundColor = backgroundColor(rowIdx)\n        result.width = columnWidths[colIdx]\n        result = { ...result, ...columnStyles[colIdx] }\n        return result\n    }\n\n    const textHeaderClass = useHeaderTextClass()\n\n    const universesFiltered = universes_ordered.filter(\n        universe => forType(props.counts, universe, props.statcol, props.articleType) > 0,\n    )\n\n    return (\n        <PageTemplate\n            screencapElements={() => ({\n                path: `${sanitize(props.joinedString)}.png`,\n                overallWidth: tableRef.current!.offsetWidth * 2,\n                elementsToRender: [headersRef.current!, tableRef.current!],\n            })}\n            hasUniverseSelector={true}\n            universes={universesFiltered}\n        >\n            <div>\n                <div ref={headersRef}>\n                    <div className={textHeaderClass}>{props.renderedStatname}</div>\n                    {/* // TODO plural */}\n                    <StatisticPanelSubhead\n                        articleType={props.articleType}\n                        renderedOther={props.order}\n                    />\n                </div>\n                <div style={{ marginBlockEnd: '16px' }}></div>\n                <div className=\"serif\" ref={tableRef}>\n                    <div style={{ display: 'flex' }}>\n                        {columnNames.map((name, i) => {\n                            if (i === 0) {\n                                return (\n                                    <div key={name} style={{ ...style(i, 0), display: 'flex', justifyContent: 'space-between', flexDirection: 'row' }}>\n                                        <div>{name}</div>\n                                        <AscendingVsDescending onClick={(currentUniverse) => { swapAscendingDescending(currentUniverse) }} isAscending={isAscending} />\n                                    </div>\n                                )\n                            }\n                            return <div key={name} style={style(i, 0)}>{name}</div>\n                        })}\n                    </div>\n                    {\n                        indexRange.map((i, rowIdx) => (\n                            <div\n                                key={i}\n                                style={{\n                                    display: 'flex', alignItems: 'baseline', backgroundColor: backgroundColor(rowIdx + 1),\n                                }}\n                            >\n                                <div style={style(0, rowIdx + 1)}>{i + 1}</div>\n                                <div style={style(1, rowIdx + 1)}>\n                                    <ArticleLink longname={props.articleNames[i]} />\n                                </div>\n                                <div style={style(2, rowIdx + 1)} className=\"value\">\n                                    <Statistic\n                                        statname={props.statname}\n                                        value={props.data.value[i]}\n                                        isUnit={false}\n                                    />\n                                </div>\n                                <div style={style(3, rowIdx + 1)} className=\"value_unit value\">\n                                    <Statistic\n                                        statname={props.statname}\n                                        value={props.data.value[i]}\n                                        isUnit={true}\n                                    />\n                                </div>\n                                <div style={style(4, rowIdx + 1)}>\n                                    <AutoPercentile\n                                        ordinal={0}\n                                        totalCountInClass={0}\n                                        data={props.data}\n                                        i={i}\n                                    />\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n                <div style={{ marginBlockEnd: '1em' }}></div>\n                <Pagination\n                    {...props}\n                />\n            </div>\n        </PageTemplate>\n    )\n}\n\nfunction Pagination(props: {\n    start: number\n    count: number\n    amount: number\n    explanationPage: string\n    statname: StatName\n    articleType: string\n    order: 'ascending' | 'descending'\n}): ReactNode {\n    // next and previous buttons, along with the current range (editable to jump to a specific page)\n    // also a button to change the number of items per page\n\n    const currentUniverse = useUniverse()\n\n    const navContext = useContext(Navigator.Context)\n\n    const changeStart = (newStart: number): void => {\n        void navContext.navigate(statisticDescriptor({\n            universe: currentUniverse,\n            ...props,\n            start: newStart,\n        }), {\n            history: 'push',\n            scroll: { kind: 'none' },\n        })\n    }\n\n    const changeAmount = (newAmount: string | number): void => {\n        let start = props.start\n        let newAmountNum: number\n        if (newAmount === 'All') {\n            start = 1\n            newAmountNum = props.count\n        }\n        else if (typeof newAmount === 'string') {\n            newAmountNum = parseInt(newAmount)\n        }\n        else {\n            newAmountNum = newAmount\n        }\n        if (start > props.count - newAmountNum) {\n            start = props.count - newAmountNum + 1\n        }\n        void navContext.navigate(statisticDescriptor({\n            universe: currentUniverse,\n            statname: props.statname,\n            articleType: props.articleType,\n            start,\n            amount: newAmount === 'All' ? 'All' : newAmountNum,\n            order: props.order,\n        }), {\n            history: 'push',\n            scroll: { kind: 'none' },\n        })\n    }\n\n    const current = props.start\n    const total = props.count\n    const perPage = props.amount\n    const prev = Math.max(1, current - perPage)\n    const maxPages = Math.max(Math.floor(total / perPage), 1)\n    const maxPageStart = (maxPages - 1) * perPage + 1\n    const next = Math.min(maxPageStart, current + perPage)\n    const currentPage = Math.ceil(current / perPage)\n\n    useEffect(() => {\n        const goToPage = (newPage: number): void => {\n            void navContext.navigate(statisticDescriptor({\n                universe: currentUniverse,\n                statname: props.statname,\n                articleType: props.articleType,\n                amount: props.amount,\n                order: props.order,\n                start: (newPage - 1) * perPage + 1,\n            }), {\n                history: 'replace',\n                scroll: { kind: 'none' },\n            })\n        }\n\n        if (currentPage > maxPages) {\n            goToPage(maxPages)\n        }\n        else if (currentPage < 1) {\n            goToPage(1)\n        }\n    }, [currentPage, maxPages, currentUniverse, perPage, props.statname, props.articleType, props.amount, props.order, navContext])\n\n    const selectPage = (\n        <SelectPage\n            changeStart={(newStart) => { changeStart(newStart) }}\n            currentPage={currentPage}\n            maxPages={maxPages}\n            prevPage={prev}\n            nextPage={next}\n            perPage={perPage}\n        />\n    )\n\n    // align the entire div to the center. not flex.\n    return (\n        <div style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'row',\n            margin: '1em',\n        }}\n        >\n            <div style={{ width: '25%' }}>\n                <div style={{ margin: 'auto', textAlign: 'center' }}>\n                    <a\n                        {...navContext.link(\n                            { kind: 'dataCredit', hash: `#explanation_${sanitize(props.explanationPage)}` },\n                            { scroll: { kind: 'none' } },\n                        )}\n                    >\n                        Data Explanation and Credit\n                    </a>\n                </div>\n            </div>\n            <div style={{ width: '50%' }}>\n                <div style={{ margin: 'auto', textAlign: 'center' }}>\n                    {selectPage}\n                </div>\n            </div>\n            <div style={{ width: '25%' }}>\n                <PerPageSelector\n                    perPage={perPage}\n                    total={total}\n                    changeAmount={(newAmount) => { changeAmount(newAmount) }}\n                />\n            </div>\n        </div>\n    )\n}\n\nfunction PerPageSelector(props: {\n    perPage: number\n    total: number\n    changeAmount: (targetValue: string) => void\n}): ReactNode {\n    const colors = useColors()\n    return (\n        <div style={{ margin: 'auto', textAlign: 'center' }}>\n            <span>\n                <select\n                    style={{ backgroundColor: colors.background, color: colors.textMain }}\n                    defaultValue={\n                        props.perPage === props.total ? 'All' : props.perPage\n                    }\n                    onChange={(e) => { props.changeAmount(e.target.value) }}\n                    className=\"serif\"\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                    <option value=\"All\">All</option>\n                </select>\n                {' '}\n                per page\n            </span>\n        </div>\n    )\n}\n\nfunction SelectPage(props: {\n    prevPage: number\n    currentPage: number\n    maxPages: number\n    perPage: number\n    changeStart: (newStart: number) => void\n    nextPage: number\n}): ReactNode {\n    // low-key style for the buttons\n    const buttonStyle = {\n        margin: '0.5em',\n    }\n\n    const [pageNumber, setPageNumber] = useState(props.currentPage.toString())\n\n    const pageField = useRef<HTMLInputElement>(null)\n\n    useEffect(() => {\n        setPageNumber(props.currentPage.toString())\n        if (document.activeElement === pageField.current) {\n            pageField.current!.select()\n        }\n    }, [props.currentPage])\n\n    const handleSubmit = (): void => {\n        let newPage = parseInt(pageNumber)\n        if (newPage < 1) {\n            newPage = 1\n        }\n        if (newPage > props.maxPages) {\n            newPage = props.maxPages\n        }\n        const newStart = (newPage - 1) * props.perPage + 1\n        props.changeStart(newStart)\n    }\n\n    const disabled = {\n        left: props.currentPage === 1,\n        right: props.currentPage === props.maxPages,\n    }\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <button\n                onClick={() => { props.changeStart(props.prevPage) }}\n                className=\"serif\"\n                style={{ ...buttonStyle, visibility: disabled.left ? 'hidden' : 'visible' }}\n                disabled={disabled.left}\n                data-test-id=\"-1\"\n            >\n                <PointerArrow direction={-1} disabled={disabled.left} />\n            </button>\n            <div>\n                <span>Page: </span>\n                <input\n                    ref={pageField}\n                    type=\"text\"\n                    pattern=\"[0-9]*\"\n                    style={{ width: '3em', textAlign: 'right', fontSize: '16px' }}\n                    className=\"serif\"\n                    value={pageNumber}\n                    onKeyDown={(e) => {\n                        if (e.key === 'Enter') {\n                            handleSubmit()\n                        }\n                    }}\n                    onFocus={(e) => {\n                        setTimeout(() => {\n                            e.target.select()\n                        }, 0)\n                    }}\n                    onBlur={handleSubmit}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => { setPageNumber(e.target.value) }}\n                />\n                <span>\n                    {' of '}\n                    {props.maxPages}\n                </span>\n            </div>\n            <button\n                onClick={() => { props.changeStart(props.nextPage) }}\n                className=\"serif\"\n                style={{ ...buttonStyle, visibility: disabled.right ? 'hidden' : 'visible' }}\n                disabled={disabled.right}\n                data-test-id=\"1\"\n            >\n                <PointerArrow direction={1} disabled={disabled.right} />\n            </button>\n        </div>\n    )\n}\n\nfunction ArticleLink(props: { longname: string }): ReactNode {\n    const currentUniverse = useUniverse()\n    const colors = useColors()\n    const navContext = useContext(Navigator.Context)\n    return (\n        <a\n            {...navContext.link({\n                kind: 'article',\n                longname: props.longname,\n                universe: currentUniverse,\n            }, { scroll: { kind: 'position', top: 0 } })}\n            style={{ fontWeight: 500, color: colors.textMain, textDecoration: 'none' }}\n        >\n            {props.longname}\n        </a>\n    )\n}\n\nfunction StatisticPanelSubhead(props: { articleType: string, renderedOther: string }): ReactNode {\n    const currentUniverse = useUniverse()\n    return (\n        <div className={useSubHeaderTextClass()}>\n            {displayType(currentUniverse, props.articleType)}\n            {' '}\n            (\n            {props.renderedOther}\n            )\n        </div>\n    )\n}\n\nfunction AutoPercentile(props: {\n    ordinal: number\n    totalCountInClass: number\n    data: { populationPercentile: number[] }\n    i: number\n}): ReactNode {\n    const [simpleOrdinals] = useSetting('simple_ordinals')\n    return (\n        <Percentile\n            ordinal={props.ordinal}\n            total={props.totalCountInClass}\n            percentileByPopulation={props.data.populationPercentile[props.i]}\n            simpleOrdinals={simpleOrdinals}\n        />\n    )\n}\n\nfunction AscendingVsDescending({ onClick, isAscending }: { onClick: (currentUniverse: string | undefined) => void, isAscending: boolean }): ReactNode {\n    const currentUniverse = useUniverse()\n    // either an up or down arrow, depending on the current ordering\n    return (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div style={{ cursor: 'pointer' }} onClick={() => { onClick(currentUniverse) }} id=\"statistic-panel-order-swap\">\n                {isAscending ? '▲\\ufe0e' : '▼\\ufe0e'}\n            </div>\n        </div>\n    )\n}\n","export default [\n    \"world\",\n    \"Africa\",\n    \"Asia\",\n    \"Europe\",\n    \"North America\",\n    \"Oceania\",\n    \"South America\",\n    \"Andorra\",\n    \"United Arab Emirates\",\n    \"Afghanistan\",\n    \"Antigua and Barbuda\",\n    \"Anguilla\",\n    \"Albania\",\n    \"Armenia\",\n    \"Angola\",\n    \"Argentina\",\n    \"Austria\",\n    \"Australia\",\n    \"Aruba\",\n    \"Azerbaijan\",\n    \"Bosnia and Herzegovina\",\n    \"Barbados\",\n    \"Bangladesh\",\n    \"Belgium\",\n    \"Burkina Faso\",\n    \"Bulgaria\",\n    \"Bahrain\",\n    \"Burundi\",\n    \"Benin\",\n    \"Bermuda\",\n    \"Brunei\",\n    \"Bolivia\",\n    \"Brazil\",\n    \"The Bahamas\",\n    \"Bhutan\",\n    \"Botswana\",\n    \"Belarus\",\n    \"Belize\",\n    \"Canada\",\n    \"Cocos (Keeling) Islands\",\n    \"Democratic Republic of the Congo\",\n    \"Central African Republic\",\n    \"Congo\",\n    \"Switzerland\",\n    \"Ivory Coast\",\n    \"Cook Islands\",\n    \"Chile\",\n    \"Cameroon\",\n    \"China\",\n    \"Colombia\",\n    \"Costa Rica\",\n    \"Cuba\",\n    \"Cape Verde\",\n    \"Christmas Island\",\n    \"Cyprus\",\n    \"Czech Republic\",\n    \"Germany\",\n    \"Djibouti\",\n    \"Denmark\",\n    \"Dominica\",\n    \"Dominican Republic\",\n    \"Algeria\",\n    \"Ecuador\",\n    \"Estonia\",\n    \"Egypt\",\n    \"Eritrea\",\n    \"Spain\",\n    \"Ethiopia\",\n    \"Finland\",\n    \"Fiji\",\n    \"Falkland Islands\",\n    \"Micronesia\",\n    \"Faroe Islands\",\n    \"France\",\n    \"Gabon\",\n    \"United Kingdom\",\n    \"Grenada\",\n    \"Georgia\",\n    \"Guernsey\",\n    \"Ghana\",\n    \"Gibraltar\",\n    \"Greenland\",\n    \"The Gambia\",\n    \"Guinea\",\n    \"Equatorial Guinea\",\n    \"Greece\",\n    \"Guatemala\",\n    \"Guinea-Bissau\",\n    \"Guyana\",\n    \"Honduras\",\n    \"Croatia\",\n    \"Haiti\",\n    \"Hungary\",\n    \"Indonesia\",\n    \"Ireland\",\n    \"Israel\",\n    \"Isle of Man\",\n    \"India\",\n    \"Iraq\",\n    \"Iran\",\n    \"Iceland\",\n    \"Italy\",\n    \"Jersey\",\n    \"Jamaica\",\n    \"Jordan\",\n    \"Japan\",\n    \"Kenya\",\n    \"Kyrgyzstan\",\n    \"Cambodia\",\n    \"Kiribati\",\n    \"Comoros\",\n    \"Saint Kitts and Nevis\",\n    \"North Korea\",\n    \"South Korea\",\n    \"Kuwait\",\n    \"Cayman Islands\",\n    \"Kazakhstan\",\n    \"Laos\",\n    \"Lebanon\",\n    \"Saint Lucia\",\n    \"Liechtenstein\",\n    \"Sri Lanka\",\n    \"Liberia\",\n    \"Lesotho\",\n    \"Lithuania\",\n    \"Luxembourg\",\n    \"Latvia\",\n    \"Libya\",\n    \"Morocco\",\n    \"Monaco\",\n    \"Moldova\",\n    \"Montenegro\",\n    \"Madagascar\",\n    \"Marshall Islands\",\n    \"North Macedonia\",\n    \"Mali\",\n    \"Myanmar\",\n    \"Mongolia\",\n    \"Mauritania\",\n    \"Montserrat\",\n    \"Malta\",\n    \"Mauritius\",\n    \"Maldives\",\n    \"Malawi\",\n    \"Mexico\",\n    \"Malaysia\",\n    \"Mozambique\",\n    \"Namibia\",\n    \"Niger\",\n    \"Norfolk Island\",\n    \"Nigeria\",\n    \"Nicaragua\",\n    \"Netherlands\",\n    \"Norway\",\n    \"Nepal\",\n    \"Nauru\",\n    \"Niue\",\n    \"New Zealand\",\n    \"Oman\",\n    \"Panama\",\n    \"Peru\",\n    \"Papua New Guinea\",\n    \"Philippines\",\n    \"Pakistan\",\n    \"Poland\",\n    \"Pitcairn Islands\",\n    \"State of Palestine\",\n    \"Portugal\",\n    \"Palau\",\n    \"Paraguay\",\n    \"Qatar\",\n    \"Romania\",\n    \"Serbia\",\n    \"Russia\",\n    \"Rwanda\",\n    \"Saudi Arabia\",\n    \"Solomon Islands\",\n    \"Seychelles\",\n    \"Sudan\",\n    \"Sweden\",\n    \"Singapore\",\n    \"Saint Helena, Ascension and Tristan da Cunha\",\n    \"Slovenia\",\n    \"Slovakia\",\n    \"Sierra Leone\",\n    \"San Marino\",\n    \"Senegal\",\n    \"Somalia\",\n    \"Suriname\",\n    \"South Sudan\",\n    \"S\\u00e3o Tom\\u00e9 and Pr\\u00edncipe\",\n    \"El Salvador\",\n    \"Syria\",\n    \"Eswatini\",\n    \"Turks and Caicos Islands\",\n    \"Chad\",\n    \"Togo\",\n    \"Thailand\",\n    \"Tajikistan\",\n    \"Tokelau\",\n    \"East Timor\",\n    \"Turkmenistan\",\n    \"Tunisia\",\n    \"Tonga\",\n    \"Turkey\",\n    \"Trinidad and Tobago\",\n    \"Tuvalu\",\n    \"Tanzania\",\n    \"Ukraine\",\n    \"Uganda\",\n    \"USA\",\n    \"Uruguay\",\n    \"Uzbekistan\",\n    \"Vatican City\",\n    \"Saint Vincent and the Grenadines\",\n    \"Venezuela\",\n    \"British Virgin Islands\",\n    \"Vietnam\",\n    \"Vanuatu\",\n    \"Samoa\",\n    \"Yemen\",\n    \"South Africa\",\n    \"Zambia\",\n    \"Zimbabwe\",\n    \"Alabama, USA\",\n    \"Alaska, USA\",\n    \"Arizona, USA\",\n    \"Arkansas, USA\",\n    \"California, USA\",\n    \"Colorado, USA\",\n    \"Connecticut, USA\",\n    \"Delaware, USA\",\n    \"Florida, USA\",\n    \"Georgia, USA\",\n    \"Hawaii, USA\",\n    \"Idaho, USA\",\n    \"Illinois, USA\",\n    \"Indiana, USA\",\n    \"Iowa, USA\",\n    \"Kansas, USA\",\n    \"Kentucky, USA\",\n    \"Louisiana, USA\",\n    \"Maine, USA\",\n    \"Maryland, USA\",\n    \"Massachusetts, USA\",\n    \"Michigan, USA\",\n    \"Minnesota, USA\",\n    \"Mississippi, USA\",\n    \"Missouri, USA\",\n    \"Montana, USA\",\n    \"Nebraska, USA\",\n    \"Nevada, USA\",\n    \"New Hampshire, USA\",\n    \"New Jersey, USA\",\n    \"New Mexico, USA\",\n    \"New York, USA\",\n    \"North Carolina, USA\",\n    \"North Dakota, USA\",\n    \"Ohio, USA\",\n    \"Oklahoma, USA\",\n    \"Oregon, USA\",\n    \"Pennsylvania, USA\",\n    \"Rhode Island, USA\",\n    \"South Carolina, USA\",\n    \"South Dakota, USA\",\n    \"Tennessee, USA\",\n    \"Texas, USA\",\n    \"Utah, USA\",\n    \"Vermont, USA\",\n    \"Virginia, USA\",\n    \"Washington, USA\",\n    \"West Virginia, USA\",\n    \"Wisconsin, USA\",\n    \"Wyoming, USA\",\n    \"American Samoa, USA\",\n    \"Guam, USA\",\n    \"Northern Mariana Islands, USA\",\n    \"Puerto Rico, USA\",\n    \"US Virgin Islands, USA\",\n    \"District of Columbia, USA\",\n    \"Alberta, Canada\",\n    \"British Columbia, Canada\",\n    \"Manitoba, Canada\",\n    \"New Brunswick, Canada\",\n    \"Newfoundland and Labrador, Canada\",\n    \"Northwest Territories, Canada\",\n    \"Nova Scotia, Canada\",\n    \"Nunavut, Canada\",\n    \"Ontario, Canada\",\n    \"Prince Edward Island, Canada\",\n    \"Quebec, Canada\",\n    \"Saskatchewan, Canada\",\n    \"Yukon, Canada\"\n] as const"],"names":["tableStyle","columnNames","columnWidths","columnStyles","StatisticPanel","props","colors","useColors","headersRef","useRef","tableRef","isAscending","navContext","useContext","Navigator","indexRange","useMemo","start","end","total","Array","_","i","swapAscendingDescending","currentUniverse","statisticDescriptor","backgroundColor","rowIdx","nameAtIdx","style","colIdx","result","textHeaderClass","useHeaderTextClass","universesFiltered","universes_ordered","universe","forType","PageTemplate","sanitize","StatisticPanelSubhead","name","AscendingVsDescending","ArticleLink","Statistic","AutoPercentile","Pagination","useUniverse","changeStart","newStart","changeAmount","newAmount","newAmountNum","parseInt","current","perPage","prev","Math","maxPages","next","currentPage","useEffect","goToPage","newPage","selectPage","SelectPage","PerPageSelector","e","buttonStyle","_useState","pageNumber","setPageNumber","pageField","document","handleSubmit","disabled","PointerArrow","setTimeout","useSubHeaderTextClass","displayType","simpleOrdinals","_useSetting","Percentile","param","onClick"],"mappings":"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UACA,SACA,cACA,QACA,OACA,OACA,UACA,QACA,SACA,UACA,SACA,QACA,QACA,aACA,WACA,WACA,UACA,wBACA,cACA,cACA,SACA,iBACA,aACA,OACA,UACA,cACA,gBACA,YACA,UACA,UACA,YACA,aACA,SACA,QACA,UACA,SACA,UACA,aACA,aACA,mBACA,kBACA,OACA,UACA,WACA,aACA,aACA,QACA,YACA,WACA,SACA,SACA,WACA,aACA,UACA,QACA,iBACA,UACA,YACA,cACA,SACA,QACA,QACA,OACA,cACA,OACA,SACA,OACA,mBACA,cACA,WACA,SACA,mBACA,qBACA,WACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,eACA,kBACA,aACA,QACA,SACA,YACA,+CACA,WACA,WACA,eACA,aACA,UACA,UACA,WACA,cACA,iCACA,cACA,QACA,WACA,2BACA,OACA,OACA,WACA,aACA,UACA,aACA,eACA,UACA,QACA,SACA,sBACA,SACA,WACA,UACA,SACA,MACA,UACA,aACA,eACA,mCACA,YACA,yBACA,UACA,UACA,QACA,QACA,eACA,SACA,WACA,eACA,cACA,eACA,gBACA,kBACA,gBACA,mBACA,gBACA,eACA,eACA,cACA,aACA,gBACA,eACA,YACA,cACA,gBACA,iBACA,aACA,gBACA,qBACA,gBACA,iBACA,mBACA,gBACA,eACA,gBACA,cACA,qBACA,kBACA,kBACA,gBACA,sBACA,oBACA,YACA,gBACA,cACA,oBACA,oBACA,sBACA,oBACA,iBACA,aACA,YACA,eACA,gBACA,kBACA,qBACA,iBACA,eACA,sBACA,YACA,gCACA,mBACA,yBACA,4BACA,kBACA,2BACA,mBACA,wBACA,oCACA,gCACA,sBACA,kBACA,kBACA,+BACA,iBACA,uBACA,gBACH,A"}