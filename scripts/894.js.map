{"version":3,"file":"894.js","sources":["webpack://assets/./node_modules/@fontsource/inconsolata/500.css","webpack://assets/./node_modules/@fontsource/inconsolata/500.css?d35f","webpack://assets/./node_modules/better-react-mathjax/esm/MathJaxContext/MathJaxContext.js","webpack://assets/./node_modules/react-a11y-footnotes/dist/index.js","webpack://assets/./src/urban-stats-script/StandaloneEditor.tsx","webpack://assets/./src/uss-documentation.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"./files/inconsolata-vietnamese-500-normal.woff2\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"./files/inconsolata-vietnamese-500-normal.woff\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"./files/inconsolata-latin-ext-500-normal.woff2\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_3___ = new URL(\"./files/inconsolata-latin-ext-500-normal.woff\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_4___ = new URL(\"./files/inconsolata-latin-500-normal.woff2\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_5___ = new URL(\"./files/inconsolata-latin-500-normal.woff\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_5___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* inconsolata-vietnamese-500-normal */\n@font-face {\n  font-family: 'Inconsolata';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 500;\n  src: url(${___CSS_LOADER_URL_REPLACEMENT_0___}) format('woff2'), url(${___CSS_LOADER_URL_REPLACEMENT_1___}) format('woff');\n  unicode-range: U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+0300-0301,U+0303-0304,U+0308-0309,U+0323,U+0329,U+1EA0-1EF9,U+20AB;\n}\n\n/* inconsolata-latin-ext-500-normal */\n@font-face {\n  font-family: 'Inconsolata';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 500;\n  src: url(${___CSS_LOADER_URL_REPLACEMENT_2___}) format('woff2'), url(${___CSS_LOADER_URL_REPLACEMENT_3___}) format('woff');\n  unicode-range: U+0100-02BA,U+02BD-02C5,U+02C7-02CC,U+02CE-02D7,U+02DD-02FF,U+0304,U+0308,U+0329,U+1D00-1DBF,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20C0,U+2113,U+2C60-2C7F,U+A720-A7FF;\n}\n\n/* inconsolata-latin-500-normal */\n@font-face {\n  font-family: 'Inconsolata';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 500;\n  src: url(${___CSS_LOADER_URL_REPLACEMENT_4___}) format('woff2'), url(${___CSS_LOADER_URL_REPLACEMENT_5___}) format('woff');\n  unicode-range: U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@fontsource/inconsolata/500.css\"],\"names\":[],\"mappings\":\"AAAA,sCAAsC;AACtC;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAA6I;EAC7I,2JAA2J;AAC7J;;AAEA,qCAAqC;AACrC;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAA2I;EAC3I,iMAAiM;AACnM;;AAEA,iCAAiC;AACjC;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAmI;EACnI,uKAAuK;AACzK\",\"sourcesContent\":[\"/* inconsolata-vietnamese-500-normal */\\n@font-face {\\n  font-family: 'Inconsolata';\\n  font-style: normal;\\n  font-display: swap;\\n  font-weight: 500;\\n  src: url(./files/inconsolata-vietnamese-500-normal.woff2) format('woff2'), url(./files/inconsolata-vietnamese-500-normal.woff) format('woff');\\n  unicode-range: U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+0300-0301,U+0303-0304,U+0308-0309,U+0323,U+0329,U+1EA0-1EF9,U+20AB;\\n}\\n\\n/* inconsolata-latin-ext-500-normal */\\n@font-face {\\n  font-family: 'Inconsolata';\\n  font-style: normal;\\n  font-display: swap;\\n  font-weight: 500;\\n  src: url(./files/inconsolata-latin-ext-500-normal.woff2) format('woff2'), url(./files/inconsolata-latin-ext-500-normal.woff) format('woff');\\n  unicode-range: U+0100-02BA,U+02BD-02C5,U+02C7-02CC,U+02CE-02D7,U+02DD-02FF,U+0304,U+0308,U+0329,U+1D00-1DBF,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20C0,U+2113,U+2C60-2C7F,U+A720-A7FF;\\n}\\n\\n/* inconsolata-latin-500-normal */\\n@font-face {\\n  font-family: 'Inconsolata';\\n  font-style: normal;\\n  font-display: swap;\\n  font-weight: 500;\\n  src: url(./files/inconsolata-latin-500-normal.woff2) format('woff2'), url(./files/inconsolata-latin-500-normal.woff) format('woff');\\n  unicode-range: U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../css-loader/dist/cjs.js!./500.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../css-loader/dist/cjs.js!./500.css\";\n       export default content && content.locals ? content.locals : undefined;\n","var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,o=1,n=arguments.length;o<n;o++)for(var a in t=arguments[o])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};import React,{createContext,useContext,useRef}from\"react\";var v2Promise,v3Promise,MathJaxBaseContext=createContext(void 0),DEFAULT_V2_SRC=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js?config=TeX-MML-AM_CHTML\",DEFAULT_V3_SRC=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/es5/tex-mml-chtml.js\",MathJaxContext=function(e){var n=e.config,t=e.version,t=void 0===t?3:t,o=e.src,o=void 0===o?2===t?DEFAULT_V2_SRC:DEFAULT_V3_SRC:o,a=e.onStartup,r=e.onLoad,i=e.onError,s=e.typesettingOptions,h=e.renderMode,h=void 0===h?\"post\":h,d=e.hideUntilTypeset,e=e.children,c=useContext(MathJaxBaseContext);if(void 0!==(null==c?void 0:c.version)&&(null==c?void 0:c.version)!==t)throw Error(\"Cannot nest MathJaxContexts with different versions. MathJaxContexts should not be nested at all but if they are, they cannot have different versions. Stick with one version of MathJax in your app and avoid using more than one MathJaxContext.\");if(2===t&&void 0!==v3Promise||3===t&&void 0!==v2Promise)throw Error(\"Cannot use MathJax versions 2 and 3 simultaneously in the same app due to how MathJax is set up in the browser; either you have multiple MathJaxContexts with different versions or you have mounted and unmounted MathJaxContexts with different versions. Please stick with one version of MathJax in your app. File an issue in the project Github page if you need this feature.\");var u=useRef(c),c=useRef((null==c?void 0:c.version)||null);if(null===c.current)c.current=t;else if(c.current!==t)throw Error(\"Cannot change version of MathJax in a MathJaxContext after it has mounted. Reload the page with a new version when this must happen.\");var v=o||(2===t?DEFAULT_V2_SRC:DEFAULT_V3_SRC);function f(t,o){n&&(window.MathJax=n);var e=document.createElement(\"script\");e.type=\"text/javascript\",e.src=v,e.async=!1,e.addEventListener(\"load\",function(){var e=window.MathJax;a&&a(e),t(e),r&&r()}),e.addEventListener(\"error\",function(e){return o(e)}),document.getElementsByTagName(\"head\")[0].appendChild(e)}return void 0===u.current&&(c={typesettingOptions:s,renderMode:h,hideUntilTypeset:d},2===t?void 0===v2Promise&&(\"undefined\"!=typeof window?(v2Promise=new Promise(f)).catch(function(e){if(!i)throw Error(\"Failed to download MathJax version 2 from '\".concat(v,\"' due to: \").concat(e));i(e)}):(v2Promise=Promise.reject()).catch(function(e){})):void 0===v3Promise&&(\"undefined\"!=typeof window?(v3Promise=new Promise(f)).catch(function(e){if(!i)throw Error(\"Failed to download MathJax version 3 from '\".concat(v,\"' due to: \").concat(e));i(e)}):(v3Promise=Promise.reject()).catch(function(e){})),u.current=__assign(__assign({},c),2===t?{version:2,promise:v2Promise}:{version:3,promise:v3Promise})),React.createElement(MathJaxBaseContext.Provider,{value:u.current},e)};export default MathJaxContext;export{MathJaxBaseContext};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FootnotesProvider = exports.Footnotes = exports.FootnoteRef = void 0;\nexports.getIdFromTree = getIdFromTree;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar FootnotesContext = /*#__PURE__*/_react[\"default\"].createContext({});\n\nvar FootnoteRef = function FootnoteRef(props) {\n  var description = props.description;\n\n  var _React$useContext = _react[\"default\"].useContext(FootnotesContext),\n      footnotes = _React$useContext.footnotes,\n      footnotesTitleId = _React$useContext.footnotesTitleId,\n      getFootnoteRefId = _React$useContext.getFootnoteRefId,\n      getFootnoteId = _React$useContext.getFootnoteId,\n      register = _React$useContext.register;\n\n  var idRef = _react[\"default\"].useMemo(function () {\n    return getFootnoteRefId(props);\n  }, [getFootnoteRefId, props]);\n\n  var idNote = _react[\"default\"].useMemo(function () {\n    return getFootnoteId(props);\n  }, [getFootnoteId, props]);\n\n  var footnote = _react[\"default\"].useMemo(function () {\n    return {\n      idRef: idRef,\n      idNote: idNote,\n      description: description\n    };\n  }, [idRef, idNote, description]); // It is not possible to update the React state on the server, still the\n  // footnote references need to be registered so the footnotes can be rendered.\n  // In that case, we mutate the state directly so the footnotes work with SSR.\n\n\n  if (!footnotes.has(footnote.idRef)) {\n    footnotes.set(footnote.idRef, footnote);\n  } // Once the application mounts, the footnotes state has been emptied and we\n  // can properly register the current footnote in it, and unregister it if it\n  // was to unmount.\n\n\n  _react[\"default\"].useEffect(function () {\n    var unregister = register(footnote);\n    return function () {\n      return unregister();\n    };\n  }, [register, footnote]);\n\n  return /*#__PURE__*/_react[\"default\"].createElement(\"a\", {\n    className: props.className,\n    style: props.style,\n    id: idRef,\n    href: \"#\".concat(idNote),\n    role: \"doc-noteref\",\n    \"aria-describedby\": footnotesTitleId,\n    \"data-a11y-footnotes-ref\": true\n  }, props.children);\n};\n\nexports.FootnoteRef = FootnoteRef;\nFootnoteRef.propTypes = {\n  description: _propTypes[\"default\"].node.isRequired,\n  children: _propTypes[\"default\"].node.isRequired,\n  id: _propTypes[\"default\"].string\n};\n\nvar Footnotes = function Footnotes(props) {\n  var _React$useContext2 = _react[\"default\"].useContext(FootnotesContext),\n      footnotes = _React$useContext2.footnotes,\n      footnotesTitleId = _React$useContext2.footnotesTitleId;\n\n  var Wrapper = props.Wrapper,\n      Title = props.Title,\n      List = props.List,\n      ListItem = props.ListItem,\n      BackLink = props.BackLink;\n  if (footnotes.size === 0) return null;\n  var references = Array.from(footnotes.values());\n  return /*#__PURE__*/_react[\"default\"].createElement(Wrapper, {\n    \"data-a11y-footnotes-footer\": true,\n    role: \"doc-endnotes\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(Title, {\n    \"data-a11y-footnotes-title\": true,\n    id: footnotesTitleId\n  }), /*#__PURE__*/_react[\"default\"].createElement(List, {\n    \"data-a11y-footnotes-list\": true\n  }, references.map(function (_ref, index) {\n    var idNote = _ref.idNote,\n        idRef = _ref.idRef,\n        description = _ref.description;\n    return /*#__PURE__*/_react[\"default\"].createElement(ListItem, {\n      id: idNote,\n      key: idNote,\n      \"data-a11y-footnotes-list-item\": true\n    }, description, \"\\xA0\", /*#__PURE__*/_react[\"default\"].createElement(BackLink, {\n      \"data-a11y-footnotes-back-link\": true,\n      href: '#' + idRef,\n      \"aria-label\": \"Back to reference \".concat(index + 1),\n      role: \"doc-backlink\"\n    }));\n  })));\n};\n\nexports.Footnotes = Footnotes;\nFootnotes.defaultProps = {\n  Wrapper: 'footer',\n  Title: function Title(props) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"h2\", props, \"Footnotes\");\n  },\n  List: 'ol',\n  ListItem: 'li',\n  BackLink: function BackLink(props) {\n    return /*#__PURE__*/_react[\"default\"].createElement(\"a\", props, \"\\u21A9\");\n  }\n};\n\nvar FootnotesProvider = function FootnotesProvider(_ref2) {\n  var children = _ref2.children,\n      footnotesTitleId = _ref2.footnotesTitleId;\n\n  var _React$useState = _react[\"default\"].useState(new Map()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      footnotes = _React$useState2[0],\n      setFootnotes = _React$useState2[1];\n\n  var getBaseId = _react[\"default\"].useCallback(function (_ref3) {\n    var id = _ref3.id,\n        children = _ref3.children;\n    return id || getIdFromTree(children);\n  }, []);\n\n  var getFootnoteRefId = _react[\"default\"].useCallback(function (props) {\n    return getBaseId(props) + '-ref';\n  }, [getBaseId]);\n\n  var getFootnoteId = _react[\"default\"].useCallback(function (props) {\n    return getBaseId(props) + '-note';\n  }, [getBaseId]); // When JavaScript kicks in and the application mounts, reset the footnotes\n  // store which was mutated by every reference.\n\n\n  _react[\"default\"].useEffect(function () {\n    return setFootnotes(new Map());\n  }, []);\n\n  var register = _react[\"default\"].useCallback(function (footnote) {\n    setFootnotes(function (footnotes) {\n      var clone = new Map(footnotes);\n      if (!clone.has(footnote.idRef)) clone.set(footnote.idRef, footnote);\n      return clone;\n    }); // Return a function which can be used to unregister the footnote. This\n    // makes it convenient to register a footnote reference on mount, and\n    // unregister it on unmount.\n\n    return function () {\n      setFootnotes(function (footnotes) {\n        var clone = new Map(footnotes);\n        clone[\"delete\"](footnote.idRef);\n        return clone;\n      });\n    };\n  }, []);\n\n  return /*#__PURE__*/_react[\"default\"].createElement(FootnotesContext.Provider, {\n    value: {\n      footnotes: footnotes,\n      footnotesTitleId: footnotesTitleId,\n      getFootnoteRefId: getFootnoteRefId,\n      getFootnoteId: getFootnoteId,\n      register: register\n    }\n  }, children);\n};\n\nexports.FootnotesProvider = FootnotesProvider;\nFootnotesProvider.defaultProps = {\n  footnotesTitleId: 'footnotes-label'\n};\n\nfunction getTextFromTree(tree) {\n  var text = '';\n\n  if (typeof tree === 'string') {\n    text += tree;\n  } else if (Array.isArray(tree)) {\n    text += tree.map(getTextFromTree).join('');\n  } else if (tree.props.children) {\n    text += getTextFromTree(tree.props.children);\n  }\n\n  return text;\n}\n\nfunction getIdFromTree(tree) {\n  return getTextFromTree(tree).toLowerCase() // Remove any character that is not a letter, a number, an hyphen or an\n  // underscore, regardless of casing\n  .replace(/[^a-z0-9-_\\s]/g, '') // Replace all spaces with hyphens\n  .replace(/\\s+/g, '-');\n}\n","/**\n * Typically an Editor is connected to another system (e.g. the mapper) that manages its state.\n * This Editor mostly manages its own state, and presents its own result.\n */\n\nimport React, { ReactNode, useEffect, useRef, useState } from 'react'\n\nimport { Editor } from './Editor'\nimport { defaultConstants } from './constants/constants'\nimport { EditorResult, Range, UndoRedoOptions, useUndoRedo } from './editor-utils'\nimport { parse } from './parser'\nimport { USSDocumentedType } from './types-values'\nimport { executeAsync } from './workerManager'\n\nexport function StandaloneEditor(props: { ident: string, getCode: () => string, onChange?: (code: string) => void }): ReactNode {\n    const editorRef = useRef<HTMLPreElement | null>(null)\n\n    const { uss, setUss, typeEnvironment, results, selection, setSelection } = useStandaloneEditorState<Range | null>({\n        ...props,\n        getSelection: () => null,\n        undoRedoOptions: { onlyElement: editorRef },\n    })\n\n    return (\n        <div id=\"test-editor-panel\">\n            <Editor\n                uss={uss}\n                setUss={setUss}\n                typeEnvironment={typeEnvironment}\n                results={results}\n                placeholder=\"Enter Urban Stats Script\"\n                selection={selection}\n                setSelection={setSelection}\n                eRef={editorRef}\n            />\n        </div>\n    )\n}\n\nexport function useStandaloneEditorState<Selection>({ ident, getCode, onChange, getSelection, undoRedoOptions }: {\n    ident: string\n    getCode: () => string\n    onChange?: (code: string) => void\n    getSelection: () => Selection\n    undoRedoOptions: UndoRedoOptions\n}): {\n        uss: string\n        setUss: (newUss: string) => void\n        typeEnvironment: Map<string, USSDocumentedType>\n        results: EditorResult[]\n        selection: Selection\n        setSelection: (newSelection: Selection) => void\n    } {\n    const [results, setResults] = useState<EditorResult[]>([])\n\n    const [uss, setUss] = useState(getCode)\n    const ussVersion = useRef(0)\n\n    const [selection, setSelection] = useState<Selection>(getSelection)\n\n    const updateUss = async (newScript: string): Promise<void> => {\n        setUss(newScript)\n        const version = ++ussVersion.current\n        onChange?.(newScript)\n\n        const stmts = parse(newScript, { type: 'single', ident })\n\n        if (stmts.type === 'error') {\n            setResults(stmts.errors.map(e => ({ ...e, kind: 'error' })))\n            return\n        }\n\n        const exec = await executeAsync({ descriptor: { kind: 'generic' }, stmts })\n\n        if (version === ussVersion.current) {\n            // avoid race conditions\n            setResults([\n                ...(exec.resultingValue !== undefined ? [{ kind: 'success' as const, result: exec.resultingValue }] : []),\n                ...exec.error,\n            ])\n        }\n    }\n\n    const { addState, updateCurrentSelection } = useUndoRedo(\n        uss,\n        selection,\n        updateUss,\n        setSelection,\n        undoRedoOptions,\n    )\n\n    useEffect(\n        () => {\n            void updateUss(getCode())\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- run once at beginning\n        [],\n    )\n\n    const typeEnvironment = defaultConstants as Map<string, USSDocumentedType>\n\n    return {\n        uss,\n        setUss: (newUss) => {\n            void updateUss(newUss)\n            addState(newUss, selection)\n        },\n        setSelection: (newSelection) => {\n            setSelection(newSelection)\n            updateCurrentSelection(newSelection)\n        },\n        typeEnvironment,\n        selection,\n        results,\n    }\n}\n","import { MathJaxContext } from 'better-react-mathjax'\nimport React, { ReactNode, useState } from 'react'\nimport { Footnotes, FootnotesProvider } from 'react-a11y-footnotes'\n\nimport './style.css'\nimport './common.css'\nimport { defaultTypeEnvironment } from './mapper/context'\nimport { useColors } from './page_template/colors'\nimport { PageTemplate } from './page_template/template'\nimport { StandaloneEditor } from './urban-stats-script/StandaloneEditor'\nimport { defaultConstants } from './urban-stats-script/constants/constants'\nimport { expressionOperatorMap } from './urban-stats-script/operators'\nimport { constantCategories, ConstantCategory, DocumentationTable, renderType, USSDocumentedType, USSValue } from './urban-stats-script/types-values'\nimport { assert } from './utils/defensive'\nimport { useHeaderTextClass } from './utils/responsive'\n\nexport function USSDocumentationPanel(): ReactNode {\n    const textHeaderClass = useHeaderTextClass()\n\n    return (\n        <MathJaxContext>\n            <PageTemplate>\n                <FootnotesProvider>\n                    <div className=\"serif\">\n                        <div className={textHeaderClass}>USS Documentation</div>\n\n                        <Header title=\"Urban Stats Script (USS)\" header=\"h1\" ident=\"uss-title\">\n                            <p>\n                                Urban Stats Script (USS) is a scripting language for describing operations on\n                                data. It is designed to allow users to describe programs as if they refer to a\n                                single row of data, while simultaneously allowing global operations like regression.\n                            </p>\n                            <p>\n                                The basic syntax of USS should be familiar to any programmer. Arithmetic operations are\n                                written as you would expect. Feel free to edit the code below to see how the result changes:\n                            </p>\n                            <StandaloneEditor ident=\"aritmetic\" getCode={() => 'x = 2 ** 3 + 3 * 4' + '\\n' + 'y = x + 2' + '\\n' + 'y'} />\n                            <p>\n                                A full list of operators is available\n                                {' '}\n                                <a href=\"#all-operators\">here</a>\n                                .\n                            </p>\n                            <Header title=\"Lists\" header=\"h2\" ident=\"lists\">\n                                <p>\n                                    The language also supports lists, which are denoted by square brackets. You can use operators on these as well:\n                                </p>\n                                <StandaloneEditor ident=\"lists\" getCode={() => 'x = [1, 2, 3]' + '\\n' + 'y = x + [4, 5, 6]' + '\\n' + 'y'} />\n                                <p>\n                                    For details on broadcasting, see the\n                                    {' '}\n                                    <a href=\"#broadcasting\">broadcasting</a>\n                                    {' '}\n                                    section.\n                                </p>\n                            </Header>\n                            <Header title=\"Objects\" header=\"h2\" ident=\"objects\">\n                                <p>\n                                    The language also supports objects, which are denoted by curly braces. You can use operators on these as well:\n                                </p>\n                                <StandaloneEditor ident=\"objects\" getCode={() => 'x = {a: 1, b: 2}' + '\\n' + 'y = x.a + x.b' + '\\n' + 'y'} />\n                            </Header>\n                            <Header title=\"Opaque Types\" header=\"h2\" ident=\"opaque-types\">\n                                <p>\n                                    USS has several opaque types, which are types that you can only interact with via functions.\n                                    For example, colors are opaque types, and you can only create them using functions like\n                                    {' '}\n                                    <code>rgb()</code>\n                                    {', '}\n                                    <code>hsv()</code>\n                                    , or one of the predefined colors.\n                                </p>\n                                <StandaloneEditor ident=\"opaque-types\" getCode={() => 'x = rgb(0, 0, 1)' + '\\n' + 'y = hsv(0, 1, 1)' + '\\n' + '[x, y, colorRed]'} />\n                                <p>\n                                    And you can only interact with them using functions like\n                                    {' '}\n                                    <code>renderColor()</code>\n                                    {' '}\n                                    or in other contexts that use color objects.\n                                </p>\n                                <StandaloneEditor ident=\"opaque-types\" getCode={() => 'x = rgb(0, 0, 1)' + '\\n' + 'y = hsv(0, 1, 1)' + '\\n' + 'renderColor([x, y, colorRed])'} />\n                            </Header>\n                            <Header title=\"Regressions\" header=\"h2\" ident=\"regressions\">\n                                <p>\n                                    USS supports linear regression via the\n                                    {' '}\n                                    <code>regress(y, x1, x2, ..., weight)</code>\n                                    {' '}\n                                    function, which returns an object with several properties:\n                                </p>\n                                <ul>\n                                    <li>\n                                        <code>b</code>\n                                        : The intercept of the regression line.\n                                    </li>\n                                    <li>\n                                        <code>m1, m2, m3...</code>\n                                        : The coefficients for each independent variable.\n                                    </li>\n                                    <li>\n                                        <code>r2</code>\n                                        : The R-squared value of the regression.\n                                    </li>\n                                    <li>\n                                        <code>residuals</code>\n                                        : The residuals of the regression.\n                                    </li>\n                                </ul>\n                                <p>\n                                    For example, to perform a regression of y on x1 and x2, with the last point weighted more heavily, you could do:\n                                </p>\n                                <StandaloneEditor\n                                    ident=\"regression\"\n                                    getCode={\n                                        () =>\n                                            'x1 = [1, 2, 3, 4, 5]' + '\\n'\n                                            + 'x2 = [2, 3, 2, 3, 2]' + '\\n'\n                                            + 'y = [2.2, 2.8, 3.6, 4.5, 5.1]' + '\\n'\n                                            + 'w = [1, 1, 1, 1, 10]' + '\\n'\n                                            + 'model = regression(y=y, x1=x1, x2=x2, weight=w)' + '\\n'\n                                            + 'model'\n                                    }\n                                />\n                                <p>\n                                    Note that the inputs are all named arguments and the weight is optional.\n                                </p>\n                            </Header>\n                            <Header title=\"Aggregation\" header=\"h2\" ident=\"aggregation\">\n                                <p>\n                                    USS provides several functions for aggregating data, including mean, median, quantile, percentile,\n                                    min, max, sum, and more.\n                                </p>\n                                <p>\n                                    For example, to calculate the mean of a vector, you can do:\n                                </p>\n                                <StandaloneEditor ident=\"aggregation\" getCode={() => 'mean([1, 2, 3, 4, 50])'} />\n                                <p>\n                                    We can also weight the mean, for example:\n                                </p>\n                                <StandaloneEditor ident=\"aggregation\" getCode={() => 'mean([1, 2, 3, 4, 50], weights=[1, 1, 1, 1, 10])'} />\n                                <p>\n                                    The same works for median, quantile, and percentile.\n                                </p>\n                                <StandaloneEditor ident=\"aggregation\" getCode={() => 'percentile([1, 2, 3, 4, 50], 10, weights=[1, 1, 1, 1, 10])'} />\n                                <p>\n                                    On the other hand, min, max, and sum do not support weights.\n                                </p>\n                                <StandaloneEditor ident=\"aggregation\" getCode={() => 'min([1, 2, 3, 4, 50])'} />\n                            </Header>\n                            <Header title=\"Broadcasting\" header=\"h2\" ident=\"broadcasting\">\n                                <p>\n                                    Broadcasting is a feature of USS that allows you to operate on lists of values.\n                                </p>\n                                <Header title=\"Forward Broadcasting\" header=\"h3\" ident=\"forward-broadcasting\">\n                                    <p>\n                                        The main kind of broadcasting is\n                                        forward broadcasting, where you can apply operations to lists of elements. For example, if you have a list of numbers\n                                        and you want to add 1 to each of them, you can do:\n                                    </p>\n                                    <StandaloneEditor ident=\"broadcasting\" getCode={() => 'x = [1, 2, 3]' + '\\n' + 'y = x + 1' + '\\n' + 'y'} />\n                                    <p>\n                                        This will result in a list of numbers, where each element is 1 greater than the corresponding element in the original list.\n                                    </p>\n                                    <p>\n                                        This also works with function calls, for example:\n                                    </p>\n                                    <StandaloneEditor ident=\"broadcasting-function\" getCode={() => 'x = [1, 2, 3]' + '\\n' + 'y = sin(x)' + '\\n' + 'y'} />\n                                    <p>\n                                        Even when the list is of functions:\n                                    </p>\n                                    <StandaloneEditor ident=\"broadcasting-function-list\" getCode={() => 'x = [sin, cos, tan]' + '\\n' + 'y = x(pi)' + '\\n' + 'y'} />\n                                    <p>\n                                        You can also apply broadcasting to objects, for example:\n                                    </p>\n                                    <StandaloneEditor ident=\"broadcasting-object\" getCode={() => 'x = [{a: 1, b: 2}, {a: 3, b: 4}, {a: 5, b: 6}]' + '\\n' + 'y = x.a' + '\\n' + 'y'} />\n                                    <p>\n                                        And even assigning to a property:\n                                    </p>\n                                    <StandaloneEditor ident=\"broadcasting-object-property\" getCode={() => 'x = [{a: 1, b: 2}, {a: 3, b: 4}, {a: 5, b: 6}]' + '\\n' + 'x.a = [10, 20, 30]' + '\\n' + 'x'} />\n                                </Header>\n                                <Header title=\"Split Broadcasting\" header=\"h3\" ident=\"backward-broadcasting\">\n                                    There is also split broadcasting, which is what happens when you use an if statement.\n                                    For example, in the following code, the if statement is split into two branches, one for when y is greater than 65 and one for when it is not.\n                                    <StandaloneEditor ident=\"broadcasting\" getCode={() => 'x = [1, 2, 3]' + '\\n' + 'y = [50, 61, 70]' + '\\n' + 'if (y > 65) { x = x * 10 } else { x = x + 1 }' + '\\n' + 'x'} />\n                                    <p>\n                                        The if statement is split into two branches, one for when y is greater than 65 and one for when it is not.\n                                    </p>\n                                    <p>\n                                        Keep in mind that this is exactly two cases, rather than one for each element. Using mean() reveals this:\n                                    </p>\n                                    <StandaloneEditor ident=\"broadcasting\" getCode={() => 'x = [1, 2, 3]' + '\\n' + 'y = [50, 61, 70]' + '\\n' + 'if (y > 65) { x = mean(x) } else { x = mean(x) }' + '\\n' + 'x'} />\n                                </Header>\n                            </Header>\n                            <Header title=\"Detailed Tables\" header=\"h2\" ident=\"detailed-tables\">\n                                <Header title=\"All Operators\" header=\"h3\" ident=\"all-operators\">\n                                    <p>\n                                        The following is a list of all operators that are available in USS.\n                                    </p>\n                                    <OperatorTable />\n                                </Header>\n                            </Header>\n                            <Header title=\"Constants and Functions\" header=\"h2\" ident=\"constants\">\n                                <p>\n                                    USS provides several built-in constants and functions for mathematical operations,\n                                    data visualization, and data analysis. These are organized by category below.\n                                </p>\n                                <ConstantsDocumentation />\n                            </Header>\n                        </Header>\n                    </div>\n                    <Footnotes />\n                </FootnotesProvider>\n            </PageTemplate>\n        </MathJaxContext>\n    )\n}\n\nfunction createTable(colors: ReturnType<typeof useColors>, headers: string[], cells: ReactNode[][]): ReactNode {\n    const tableStyles = {\n        table: {\n            width: '100%',\n            borderCollapse: 'collapse' as const,\n            margin: '20px 0',\n            fontSize: '14px',\n            color: colors.textMain,\n        },\n        header: {\n            border: `1px solid ${colors.borderNonShadow}`,\n            padding: '12px',\n            textAlign: 'left' as const,\n            verticalAlign: 'top' as const,\n            backgroundColor: colors.background,\n            fontWeight: 'bold' as const,\n        },\n        cell: {\n            border: `1px solid ${colors.borderNonShadow}`,\n            padding: '12px',\n            textAlign: 'left' as const,\n            verticalAlign: 'top' as const,\n        },\n        code: {\n            backgroundColor: colors.slightlyDifferentBackground,\n            padding: '2px 4px',\n            borderRadius: '3px',\n            fontFamily: '\\'Courier New\\', monospace',\n            fontSize: '13px',\n        },\n        rowColors: {\n            even: colors.slightlyDifferentBackground,\n            odd: colors.background,\n        },\n    }\n\n    return (\n        <table style={tableStyles.table}>\n            <thead>\n                <tr>\n                    {headers.map((header, index) => (\n                        <th key={index} style={tableStyles.header}>\n                            {header}\n                        </th>\n                    ))}\n                </tr>\n            </thead>\n            <tbody>\n                {cells.map((row, rowIndex) => (\n                    <tr\n                        key={rowIndex}\n                        style={{\n                            backgroundColor: rowIndex % 2 === 0 ? tableStyles.rowColors.even : tableStyles.rowColors.odd,\n                        }}\n                    >\n                        {row.map((cell, cellIndex) => (\n                            <td key={cellIndex} style={tableStyles.cell}>\n                                {cell}\n                            </td>\n                        ))}\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    )\n}\n\nfunction OperatorTable(): ReactNode {\n    const colors = useColors()\n\n    const headers = ['Operator', 'Type', 'Precedence', 'Description', 'Example']\n    const cells = Array.from(expressionOperatorMap.entries()).map(([operator, info]) => [\n        <code key=\"operator\" style={{ backgroundColor: colors.slightlyDifferentBackground, padding: '2px 4px', borderRadius: '3px', fontFamily: '\\'Courier New\\', monospace', fontSize: '13px' }}>\n            {operator}\n        </code>,\n        info.unary && info.binary\n            ? 'Unary/Binary'\n            : info.unary\n                ? 'Unary'\n                : info.binary\n                    ? 'Binary'\n                    : 'Unknown',\n        info.precedence,\n        info.description,\n        info.examples.map((example, exampleIndex) => (\n            <span key={exampleIndex}>\n                <code style={{ backgroundColor: colors.slightlyDifferentBackground, padding: '2px 4px', borderRadius: '3px', fontFamily: '\\'Courier New\\', monospace', fontSize: '13px' }}>\n                    {example}\n                </code>\n                {exampleIndex < info.examples.length - 1 && ', '}\n            </span>\n        )),\n    ])\n\n    return createTable(colors, headers, cells)\n}\n\nfunction ConstantsDocumentation(): ReactNode {\n    const [collapsedCategories, setCollapsedCategories] = useState<Set<string>>(new Set(constantCategories))\n\n    const mapperContext = defaultTypeEnvironment('world')\n\n    // Group constants by category\n    const constantsByCategory = new Map<ConstantCategory, [string, USSDocumentedType][]>()\n\n    // Add default constants\n    for (const [name, value] of defaultConstants) {\n        const category = value.documentation?.category\n        assert(category !== undefined, `Constant ${name} does not have a category defined.`)\n        let cat = constantsByCategory.get(category)\n        if (cat === undefined) {\n            cat = []\n            constantsByCategory.set(category, cat)\n        }\n        cat.push([name, value])\n    }\n\n    // Add mapper context elements\n    for (const [name, value] of mapperContext) {\n        // Skip if already added from default constants\n        if (defaultConstants.has(name)) continue\n\n        const category = value.documentation?.category\n        assert(category !== undefined, `Constant ${name} does not have a category defined.`)\n        if (constantCategories.includes(category)) {\n            let cat = constantsByCategory.get(category)\n            if (cat === undefined) {\n                cat = []\n                constantsByCategory.set(category, cat)\n            }\n            cat.push([name, value])\n        }\n    }\n\n    // Group constants by documentationTable for table display\n    const constantsByTable = new Map<DocumentationTable, [string, USSValue][]>()\n    for (const [name, value] of defaultConstants) {\n        const tableName = value.documentation?.documentationTable\n        if (tableName !== undefined) {\n            let cat = constantsByTable.get(tableName)\n            if (cat === undefined) {\n                cat = []\n                constantsByTable.set(tableName, cat)\n            }\n            cat.push([name, value])\n        }\n    }\n\n    // Sort categories for consistent display\n    const categoryOrder = constantCategories\n    const sortedCategories = Array.from(constantsByCategory.entries()).sort((a, b) => {\n        const aIndex = categoryOrder.indexOf(a[0])\n        const bIndex = categoryOrder.indexOf(b[0])\n        return aIndex - bIndex\n    })\n\n    const toggleCategory = (category: ConstantCategory): void => {\n        setCollapsedCategories((prev) => {\n            const newSet = new Set(prev)\n            if (newSet.has(category)) {\n                newSet.delete(category)\n            }\n            else {\n                newSet.add(category)\n            }\n            return newSet\n        })\n    }\n\n    return (\n        <div>\n            {sortedCategories.map(([category, constants]) => {\n                const isCollapsed = collapsedCategories.has(category)\n                return (\n                    <div key={category}>\n                        <div\n                            style={{\n                                cursor: 'pointer',\n                                display: 'flex',\n                                alignItems: 'center',\n                                gap: '10px',\n                                marginBottom: '10px',\n                            }}\n                            onClick={() => { toggleCategory(category) }}\n                        >\n                            <span style={{\n                                fontSize: '16px',\n                                transition: 'transform 0.2s',\n                                transform: isCollapsed ? 'rotate(0deg)' : 'rotate(90deg)',\n                            }}\n                            >\n                                ▶\n                            </span>\n                            <h3 id={`constants-${category}`} style={{ margin: 0 }}>\n                                {getCategoryTitle(category)}\n                            </h3>\n                        </div>\n                        {!isCollapsed && (<DocumentationForCategory category={category} constants={constants} />)}\n                    </div>\n                )\n            })}\n\n        </div>\n    )\n}\n\nfunction DocumentationForCategory(props: { category: ConstantCategory, constants: [string, USSDocumentedType][] }): ReactNode {\n    const withoutTable: [string, USSDocumentedType][] = []\n    const categoryTables = new Map<DocumentationTable, [string, USSDocumentedType][]>()\n    for (const [name, value] of props.constants) {\n        const tableName = value.documentation?.documentationTable\n        if (tableName !== undefined) {\n            let cat = categoryTables.get(tableName)\n            if (cat === undefined) {\n                cat = []\n                categoryTables.set(tableName, cat)\n            }\n            cat.push([name, value])\n        }\n        else {\n            withoutTable.push([name, value])\n        }\n    }\n\n    return (\n        <>\n            <p style={{ marginLeft: '20px' }}>{getCategoryDescription(props.category)}</p>\n            {withoutTable.map(([name, value]) => (\n                <LongFormDocumentation key={name} name={name} value={value} />\n            ))}\n\n            {/* Add tables for constants with documentationTable */}\n            {(() => {\n                return Array.from(categoryTables.entries()).map(([tableName, tableConstants]) =>\n                    <ShortFormTableDocumentation key={tableName} tableName={tableName} tableConstants={tableConstants} />,\n                )\n            })()}\n        </>\n    )\n}\n\nfunction LongFormDocumentation(props: { name: string, value: USSDocumentedType }): ReactNode {\n    const colors = useColors()\n    return (\n        <Header key={props.name} title={props.name} header=\"h4\" ident={`constant-${props.name}`}>\n            <div style={{ marginBottom: '20px', marginLeft: '20px' }}>\n                <div style={{ marginBottom: '10px' }}>\n                    Type:\n                    <code style={{\n                        backgroundColor: colors.slightlyDifferentBackground,\n                        padding: '4px 8px',\n                        borderRadius: '3px',\n                        fontFamily: '\\'Courier New\\', monospace',\n                        fontSize: '13px',\n                        marginLeft: '10px',\n                    }}\n                    >\n                        {renderType(props.value.type)}\n                    </code>\n                </div>\n                <div style={{ marginBottom: '10px' }}>\n                    {props.value.documentation?.longDescription ?? 'No description available.'}\n                </div>\n                {props.value.documentation?.namedArgs && Object.keys(props.value.documentation.namedArgs).length > 0 && (\n                    <div style={{ marginBottom: '10px' }}>\n                        <strong>Named Arguments:</strong>\n                        <ul style={{ margin: '5px 0 0 20px' }}>\n                            {Object.entries(props.value.documentation.namedArgs).map(([argName, argDesc]) => (\n                                <li key={argName}>\n                                    <code style={{\n                                        backgroundColor: colors.slightlyDifferentBackground,\n                                        padding: '2px 4px',\n                                        borderRadius: '3px',\n                                        fontFamily: '\\'Courier New\\', monospace',\n                                        fontSize: '12px',\n                                    }}\n                                    >\n                                        {argName}\n                                    </code>\n                                    :\n                                    {' '}\n                                    {argDesc}\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                )}\n                {props.value.documentation?.isDefault && (\n                    <div\n                        style={{\n                            marginBottom: '10px',\n                            color: colors.textMain,\n                            fontStyle: 'italic',\n                        }}\n                    >\n                        Default value for this type\n                    </div>\n                )}\n            </div>\n        </Header>\n    )\n}\n\nfunction ShortFormTableDocumentation(props: { tableName: DocumentationTable, tableConstants: [string, USSDocumentedType][] }): ReactNode {\n    const colors = useColors()\n    const headers = ['Name', 'Type', 'Description']\n    const cells = props.tableConstants.map(([name, value]) => [\n        <span key=\"name\" style={{ fontFamily: '\\'Courier New\\', monospace' }}>{name}</span>,\n        <code\n            key=\"type\"\n            style={{\n                backgroundColor: colors.slightlyDifferentBackground,\n                padding: '2px 4px',\n                borderRadius: '3px',\n                fontFamily: '\\'Courier New\\', monospace',\n                fontSize: '12px',\n            }}\n        >\n            {renderType(value.type)}\n        </code>,\n        <span key=\"description\">\n            {value.documentation?.longDescription ?? 'No description available.'}\n            {value.documentation?.isDefault && (\n                <span key=\"default-indicator\" style={{ fontStyle: 'italic', color: colors.textMain }}>\n                    {' '}\n                    (default)\n                </span>\n            )}\n        </span>,\n    ])\n\n    return (\n        <div key={props.tableName} style={{ marginTop: '20px', marginLeft: '20px' }}>\n            <h4 style={{ marginBottom: '15px' }}>{getTableTitle(props.tableName)}</h4>\n            <p style={{ marginBottom: '15px' }}>{getTableDescription(props.tableName)}</p>\n            {createTable(colors, headers, cells)}\n        </div>\n    )\n}\n\nfunction getCategoryTitle(category: ConstantCategory): string {\n    switch (category) {\n        case 'logic':\n            return 'Logic and Control'\n        case 'math':\n            return 'Mathematical Functions'\n        case 'color':\n            return 'Color Functions'\n        case 'unit':\n            return 'Unit Types'\n        case 'map':\n            return 'Map and Visualization'\n        case 'scale':\n            return 'Scaling Functions'\n        case 'ramp':\n            return 'Color Ramps'\n        case 'inset':\n            return 'Map Insets'\n        case 'regression':\n            return 'Statistical Analysis'\n        case 'basic':\n            return 'Basic Functions'\n        case 'mapper':\n            return 'Mapper Data Variables'\n    }\n}\n\nfunction getCategoryDescription(category: ConstantCategory): string {\n    switch (category) {\n        case 'logic':\n            return 'Boolean values and control flow constants.'\n        case 'math':\n            return 'Mathematical functions for arithmetic, trigonometry, and statistical operations.'\n        case 'color':\n            return 'Functions for creating and manipulating colors using RGB, HSV, and predefined color palettes.'\n        case 'unit':\n            return 'Unit type constants for specifying measurement units in data visualization.'\n        case 'map':\n            return 'Functions for creating choropleth maps, point maps, and map styling.'\n        case 'scale':\n            return 'Functions for scaling numeric data to visualization ranges.'\n        case 'ramp':\n            return 'Functions for creating and manipulating color ramps for data visualization.'\n        case 'inset':\n            return 'Functions for creating map insets and managing multiple map views.'\n        case 'regression':\n            return 'Statistical analysis functions for linear regression.'\n        case 'basic':\n            return 'Basic utility functions for type conversion and common operations.'\n        case 'mapper':\n            return 'The mapper provides several variables relevant to the current universe and set of geographic features.'\n    }\n}\n\nfunction getTableTitle(tableName: DocumentationTable): string {\n    switch (tableName) {\n        case 'predefined-colors':\n            return 'Predefined Color Constants'\n        case 'unit-types':\n            return 'Unit Type Constants'\n        case 'predefined-ramps':\n            return 'Predefined Color Ramps'\n        case 'predefined-insets':\n            return 'Predefined Map Insets'\n        case 'logarithm-functions':\n            return 'Logarithm Functions'\n        case 'trigonometric-functions':\n            return 'Trigonometric Functions'\n        case 'mapper-data-variables':\n            return 'Mapper Data Variables'\n    }\n}\n\nfunction getTableDescription(tableName: DocumentationTable): string {\n    switch (tableName) {\n        case 'predefined-colors':\n            return 'Built-in color constants for common colors like red, blue, green, etc. Each color can be used directly in USS expressions.'\n        case 'unit-types':\n            return 'Unit type constants for specifying measurement units in data visualization and analysis.'\n        case 'predefined-ramps':\n            return 'Predefined color ramps for mapping numeric values to colors in data visualizations.'\n        case 'predefined-insets':\n            return 'Predefined map inset configurations for common geographic regions and territories.'\n        case 'logarithm-functions':\n            return 'Mathematical functions for computing logarithms with different bases (natural, base-10, base-2).'\n        case 'trigonometric-functions':\n            return 'Mathematical functions for trigonometric calculations (sine, cosine, arccosine, etc.).'\n        case 'mapper-data-variables':\n            return 'Variables used in the mapper.'\n    }\n}\n\nfunction Header(props: { title: string, header: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6', ident: string, children: ReactNode }): ReactNode {\n    return (\n        <>\n            <props.header id={props.ident}>\n                {props.title}\n            </props.header>\n            {props.children}\n        </>\n    )\n}\n"],"names":["URL","v2Promise","v3Promise","__assign","Object","e","t","o","n","arguments","a","MathJaxBaseContext","createContext","DEFAULT_V2_SRC","DEFAULT_V3_SRC","r","i","s","h","d","c","useContext","Error","u","useRef","v","f","window","document","Promise","React","exports","_react","_interopRequireDefault","require","_propTypes","obj","_arrayLikeToArray","arr","len","arr2","Array","FootnotesContext","FootnoteRef","props","description","_React$useContext","footnotes","footnotesTitleId","getFootnoteRefId","getFootnoteId","register","idRef","idNote","footnote","unregister","Footnotes","_React$useContext2","Wrapper","Title","List","ListItem","BackLink","references","_ref","index","FootnotesProvider","_ref2","children","_React$useState2","_arrayWithHoles","Map","_iterableToArrayLimit","_s","_e","_i","Symbol","_arr","_n","_d","err","_unsupportedIterableToArray","minLen","_nonIterableRest","TypeError","setFootnotes","getBaseId","_ref3","id","getIdFromTree","tree","getTextFromTree","text","clone","StandaloneEditor","editorRef","_useStandaloneEditorState","uss","setUss","typeEnvironment","results","selection","setSelection","Editor","useStandaloneEditorState","param","ident","getCode","onChange","getSelection","undoRedoOptions","_useState","setResults","_useState1","ussVersion","_useState2","updateUss","newScript","version","stmts","exec","parse","executeAsync","undefined","_useUndoRedo","addState","updateCurrentSelection","useEffect","newUss","newSelection","defaultConstants","USSDocumentationPanel","textHeaderClass","useHeaderTextClass","MathJaxContext","PageTemplate","Header","OperatorTable","ConstantsDocumentation","createTable","colors","headers","cells","tableStyles","header","row","rowIndex","cell","cellIndex","useColors","expressionOperatorMap","operator","info","example","exampleIndex","Set","constantCategories","collapsedCategories","setCollapsedCategories","mapperContext","defaultTypeEnvironment","constantsByCategory","_iteratorError","_value_documentation","name","value","category","assert","cat","_iteratorError1","_value_documentation1","name1","value1","category1","cat1","constantsByTable","_iteratorError2","_value_documentation2","name2","value2","tableName","cat2","categoryOrder","sortedCategories","b","aIndex","toggleCategory","prev","newSet","constants","isCollapsed","getCategoryTitle","DocumentationForCategory","withoutTable","categoryTables","getCategoryDescription","LongFormDocumentation","tableConstants","ShortFormTableDocumentation","_props_value_documentation_longDescription","_props_value_documentation1","_props_value_documentation2","renderType","argName","argDesc","_value_documentation_longDescription","getTableTitle","getTableDescription"],"mappings":"wLAII,EAAgC,IAAIA,IAAI,YAAkE,EAC1G,EAAgC,IAAIA,IAAI,YAAiE,EACzG,EAAgC,IAAIA,IAAI,YAAiE,EACzG,EAAgC,IAAIA,IAAI,WAAgE,EACxG,EAAgC,IAAIA,IAAI,YAA6D,EACrG,EAAgC,IAAIA,IAAI,WAA4D,EACpG,EAA0B,IAA4B,KACtD,EAAqC,IAAgC,GACrE,EAAqC,IAAgC,GACrE,EAAqC,IAAgC,GACrE,EAAqC,IAAgC,GACrE,EAAqC,IAAgC,GACrE,EAAqC,IAAgC,GAEzE,EAAwB,IAAI,CAAC,CAAC,EAAO,EAAE,CAAE,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE,EAAmC,uBAAuB,EAAE,EAAmC;AAC5G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE,EAAmC,uBAAuB,EAAE,EAAmC;AAC5G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE,EAAmC,uBAAuB,EAAE,EAAmC;AAC5G;AACA,CAAC,CAAC,CAAE,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,2DAA2D,CAAC,MAAQ,EAAE,CAAC,SAAW,mTAAmT,eAAiB,CAAC,+4CAA+4C,CAAC,WAAa,EAAE,EAAE,EAEv1D,MAAe,C,6JCrCX,EAAU,CAAC,CAEf,GAAQ,iBAAiB,CAAG,IAC5B,EAAQ,aAAa,CAAG,IAElB,EAAQ,MAAM,CAAG,QAAa,CAAC,KAAM,QAE3C,EAAQ,MAAM,CAAG,IACjB,EAAQ,kBAAkB,CAAG,IAEhB,IAAI,GAAO,CAAE,GAKJ,GAAO,EAAI,UAAc,EAAG,UAAc,A,oaC1BoPC,EAAUC,E,WAA1TC,EAA8B,WAAW,MAAOA,AAAAA,CAAAA,EAASC,OAAO,MAAM,EAAE,SAASC,CAAC,EAAE,IAAI,IAAIC,EAAEC,EAAE,EAAEC,EAAEC,UAAU,MAAM,CAACF,EAAEC,EAAED,IAAI,IAAI,IAAIG,KAAKJ,EAAEG,SAAS,CAACF,EAAE,CAACH,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAACE,EAAEI,IAAKL,CAAAA,CAAC,CAACK,EAAE,CAACJ,CAAC,CAACI,EAAC,EAAG,OAAOL,CAAC,GAAG,KAAK,CAAC,IAAI,CAACI,UAAU,EAAoFE,EAAmBC,AAAAA,GAAAA,EAAAA,aAAAA,AAAAA,EAAc,KAAK,GAAGC,EAAe,0FAA0FC,EAAe,4EAA09E,MAA/3E,SAAST,CAAC,EAAE,IAAIG,EAAEH,EAAE,MAAM,CAACC,EAAED,EAAE,OAAO,CAACC,EAAE,KAAK,IAAIA,EAAE,EAAEA,EAAEC,EAAEF,EAAE,GAAG,CAACE,EAAE,KAAK,IAAIA,EAAE,IAAID,EAAEO,EAAeC,EAAeP,EAAEG,EAAEL,EAAE,SAAS,CAACU,EAAEV,EAAE,MAAM,CAACW,EAAEX,EAAE,OAAO,CAACY,EAAEZ,EAAE,kBAAkB,CAACa,EAAEb,EAAE,UAAU,CAACa,EAAE,KAAK,IAAIA,EAAE,OAAOA,EAAEC,EAAEd,EAAE,gBAAgB,CAACA,EAAEA,EAAE,QAAQ,CAACe,EAAEC,AAAAA,GAAAA,EAAAA,UAAAA,AAAAA,EAAWV,GAAoB,GAAG,KAAK,IAAK,OAAMS,EAAE,KAAK,EAAEA,EAAE,OAAM,GAAK,OAAMA,EAAE,KAAK,EAAEA,EAAE,OAAM,IAAKd,EAAE,MAAMgB,MAAM,sPAAsP,GAAG,IAAIhB,GAAG,KAAK,IAAIJ,GAAW,IAAII,GAAG,KAAK,IAAIL,EAAU,MAAMqB,MAAM,wXAAwX,IAAIC,EAAEC,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAAOJ,GAAGA,EAAEI,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAAQ,OAAMJ,EAAE,KAAK,EAAEA,EAAE,OAAM,GAAI,MAAM,GAAG,OAAOA,EAAE,OAAO,CAACA,EAAE,OAAO,CAACd,OAAO,GAAGc,EAAE,OAAO,GAAGd,EAAE,MAAMgB,MAAM,wIAAwI,IAAIG,EAAElB,GAAI,KAAID,EAAEO,EAAeC,CAAa,EAAG,SAASY,EAAEpB,CAAC,CAACC,CAAC,EAAEC,GAAImB,CAAAA,OAAO,OAAO,CAACnB,CAAAA,EAAG,IAAIH,EAAEuB,SAAS,aAAa,CAAC,SAAUvB,CAAAA,EAAE,IAAI,CAAC,kBAAkBA,EAAE,GAAG,CAACoB,EAAEpB,EAAE,KAAK,CAAC,CAAC,EAAEA,EAAE,gBAAgB,CAAC,OAAO,WAAW,IAAIA,EAAEsB,OAAO,OAAO,AAACjB,CAAAA,GAAGA,EAAEL,GAAGC,EAAED,GAAGU,GAAGA,GAAG,GAAGV,EAAE,gBAAgB,CAAC,QAAQ,SAASA,CAAC,EAAE,OAAOE,EAAEF,EAAE,GAAGuB,SAAS,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAACvB,EAAE,CAAC,OAAO,KAAK,IAAIkB,EAAE,OAAO,EAAGH,CAAAA,EAAE,CAAC,mBAAmBH,EAAE,WAAWC,EAAE,iBAAiBC,CAAC,EAAE,IAAIb,EAAE,KAAK,IAAIL,GAAY,cAAa,OAAO0B,OAAQ1B,AAAAA,CAAAA,EAAU,IAAI4B,QAAQH,EAAC,EAAG,KAAK,CAAC,SAASrB,CAAC,EAAE,GAAG,CAACW,EAAE,MAAMM,MAAM,8CAA8C,MAAM,CAACG,EAAE,cAAc,MAAM,CAACpB,IAAIW,EAAEX,EAAE,GAAIJ,AAAAA,CAAAA,EAAU4B,QAAQ,MAAM,EAAC,EAAG,KAAK,CAAC,SAASxB,CAAC,EAAE,EAAC,EAAG,KAAK,IAAIH,GAAY,cAAa,OAAOyB,OAAQzB,AAAAA,CAAAA,EAAU,IAAI2B,QAAQH,EAAC,EAAG,KAAK,CAAC,SAASrB,CAAC,EAAE,GAAG,CAACW,EAAE,MAAMM,MAAM,8CAA8C,MAAM,CAACG,EAAE,cAAc,MAAM,CAACpB,IAAIW,EAAEX,EAAE,GAAIH,AAAAA,CAAAA,EAAU2B,QAAQ,MAAM,EAAC,EAAG,KAAK,CAAC,SAASxB,CAAC,EAAE,EAAC,EAAGkB,EAAE,OAAO,CAACpB,EAASA,EAAS,CAAC,EAAEiB,GAAG,IAAId,EAAE,CAAC,QAAQ,EAAE,QAAQL,CAAS,EAAE,CAAC,QAAQ,EAAE,QAAQC,CAAS,EAAC,EAAG4B,EAAAA,aAAmB,CAACnB,EAAmB,QAAQ,CAAC,CAAC,MAAMY,EAAE,OAAO,EAAElB,EAAE,C,wBCKj8F0B,EAAQ,iBAAiB,CAAGA,EAAQ,SAAS,CAAGA,EAAQ,WAAW,CAAG,KAAK,EAG3E,IAAIC,EAASC,EAAuBC,EAAQ,QAExCC,EAAaF,EAAuBC,EAAQ,OAEhD,SAASD,EAAuBG,CAAG,EAAI,OAAOA,GAAOA,EAAI,UAAU,CAAGA,EAAM,CAAE,QAAWA,CAAI,CAAG,CAQhG,SAASC,EAAkBC,CAAG,CAAEC,CAAG,EAAQA,CAAAA,AAAO,MAAPA,GAAeA,EAAMD,EAAI,MAAM,AAAD,GAAGC,CAAAA,EAAMD,EAAI,MAAM,AAAD,EAAG,IAAK,IAAItB,EAAI,EAAGwB,EAAO,AAAIC,MAAMF,GAAMvB,EAAIuB,EAAKvB,IAAOwB,CAAI,CAACxB,EAAE,CAAGsB,CAAG,CAACtB,EAAE,CAAI,OAAOwB,CAAM,CAMtL,IAAIE,EAAgCV,EAAO,OAAU,CAAC,aAAa,CAAC,CAAC,GAEjEW,EAAc,SAAqBC,CAAK,EAC1C,IAAIC,EAAcD,EAAM,WAAW,CAE/BE,EAAoBd,EAAO,OAAU,CAAC,UAAU,CAACU,GACjDK,EAAYD,EAAkB,SAAS,CACvCE,EAAmBF,EAAkB,gBAAgB,CACrDG,EAAmBH,EAAkB,gBAAgB,CACrDI,EAAgBJ,EAAkB,aAAa,CAC/CK,EAAWL,EAAkB,QAAQ,CAErCM,EAAQpB,EAAO,OAAU,CAAC,OAAO,CAAC,WACpC,OAAOiB,EAAiBL,EAC1B,EAAG,CAACK,EAAkBL,EAAM,EAExBS,EAASrB,EAAO,OAAU,CAAC,OAAO,CAAC,WACrC,OAAOkB,EAAcN,EACvB,EAAG,CAACM,EAAeN,EAAM,EAErBU,EAAWtB,EAAO,OAAU,CAAC,OAAO,CAAC,WACvC,MAAO,CACL,MAAOoB,EACP,OAAQC,EACR,YAAaR,CACf,CACF,EAAG,CAACO,EAAOC,EAAQR,EAAY,EAmB/B,OAdI,AAACE,EAAU,GAAG,CAACO,EAAS,KAAK,GAC/BP,EAAU,GAAG,CAACO,EAAS,KAAK,CAAEA,GAMhCtB,EAAO,OAAU,CAAC,SAAS,CAAC,WAC1B,IAAIuB,EAAaJ,EAASG,GAC1B,OAAO,WACL,OAAOC,GACT,CACF,EAAG,CAACJ,EAAUG,EAAS,EAEHtB,EAAO,OAAU,CAAC,aAAa,CAAC,IAAK,CACvD,UAAWY,EAAM,SAAS,CAC1B,MAAOA,EAAM,KAAK,CAClB,GAAIQ,EACJ,KAAM,IAAI,MAAM,CAACC,GACjB,KAAM,cACN,mBAAoBL,EACpB,0BAA2B,EAC7B,EAAGJ,EAAM,QAAQ,CACnB,CAEAb,CAAAA,EAAQ,WAAW,CAAGY,EACtBA,EAAY,SAAS,CAAG,CACtB,YAAaR,EAAW,OAAU,CAAC,IAAI,CAAC,UAAU,CAClD,SAAUA,EAAW,OAAU,CAAC,IAAI,CAAC,UAAU,CAC/C,GAAIA,EAAW,OAAU,CAAC,MAAM,AAClC,EAEA,IAAIqB,EAAY,SAAmBZ,CAAK,EACtC,IAAIa,EAAqBzB,EAAO,OAAU,CAAC,UAAU,CAACU,GAClDK,EAAYU,EAAmB,SAAS,CACxCT,EAAmBS,EAAmB,gBAAgB,CAEtDC,EAAUd,EAAM,OAAO,CACvBe,EAAQf,EAAM,KAAK,CACnBgB,EAAOhB,EAAM,IAAI,CACjBiB,EAAWjB,EAAM,QAAQ,CACzBkB,EAAWlB,EAAM,QAAQ,CAC7B,GAAIG,AAAmB,IAAnBA,EAAU,IAAI,CAAQ,OAAO,KACjC,IAAIgB,EAAatB,MAAM,IAAI,CAACM,EAAU,MAAM,IAC5C,OAAoBf,EAAO,OAAU,CAAC,aAAa,CAAC0B,EAAS,CAC3D,6BAA8B,GAC9B,KAAM,cACR,EAAgB1B,EAAO,OAAU,CAAC,aAAa,CAAC2B,EAAO,CACrD,4BAA6B,GAC7B,GAAIX,CACN,GAAiBhB,EAAO,OAAU,CAAC,aAAa,CAAC4B,EAAM,CACrD,2BAA4B,EAC9B,EAAGG,EAAW,GAAG,CAAC,SAAUC,CAAI,CAAEC,CAAK,EACrC,IAAIZ,EAASW,EAAK,MAAM,CACpBZ,EAAQY,EAAK,KAAK,CAClBnB,EAAcmB,EAAK,WAAW,CAClC,OAAoBhC,EAAO,OAAU,CAAC,aAAa,CAAC6B,EAAU,CAC5D,GAAIR,EACJ,IAAKA,EACL,gCAAiC,EACnC,EAAGR,EAAa,OAAqBb,EAAO,OAAU,CAAC,aAAa,CAAC8B,EAAU,CAC7E,gCAAiC,GACjC,KAAM,IAAMV,EACZ,aAAc,qBAAqB,MAAM,CAACa,EAAQ,GAClD,KAAM,cACR,GACF,IACF,CAEAlC,CAAAA,EAAQ,SAAS,CAAGyB,EACpBA,EAAU,YAAY,CAAG,CACvB,QAAS,SACT,MAAO,SAAeZ,CAAK,EACzB,OAAoBZ,EAAO,OAAU,CAAC,aAAa,CAAC,KAAMY,EAAO,YACnE,EACA,KAAM,KACN,SAAU,KACV,SAAU,SAAkBA,CAAK,EAC/B,OAAoBZ,EAAO,OAAU,CAAC,aAAa,CAAC,IAAKY,EAAO,IAClE,CACF,EAEA,IAAIsB,EAAoB,SAA2BC,CAAK,EACtD,IA9HsB7B,EA8HlB8B,EAAWD,EAAM,QAAQ,CACzBnB,EAAmBmB,EAAM,gBAAgB,CAGzCE,EAlImCC,AAUzC,SAAyBhC,CAAG,EAAI,GAAIG,MAAM,OAAO,CAACH,GAAM,OAAOA,CAAK,EAV5CA,EAiIAN,EAAO,OAAU,CAAC,QAAQ,CAAC,IAAIuC,OAjIUC,AAQjE,SAA+BlC,CAAG,CAAEtB,CAAC,EAAI,IAAoLyD,EAAIC,EAApLC,EAAKrC,AAAO,MAAPA,EAAc,KAAO,AAAkB,aAAlB,OAAOsC,QAA0BtC,CAAG,CAACsC,OAAO,QAAQ,CAAC,EAAItC,CAAG,CAAC,aAAa,CAAE,GAAIqC,AAAM,MAANA,GAAoB,IAAIE,EAAO,EAAE,CAAMC,EAAK,GAAUC,EAAK,GAAmB,GAAI,CAAE,IAAKJ,EAAKA,EAAG,IAAI,CAACrC,GAAM,CAAEwC,CAAAA,EAAML,AAAAA,CAAAA,EAAKE,EAAG,IAAI,EAAC,EAAG,IAAG,IAAiBE,EAAK,IAAI,CAACJ,EAAG,KAAK,EAAYI,EAAK,MAAM,GAAK7D,GAA3D8D,EAAK,IAAkE,CAAE,MAAOE,EAAK,CAAED,EAAK,GAAML,EAAKM,CAAK,QAAU,CAAE,GAAI,CAAM,AAACF,GAAMH,AAAgB,MAAhBA,EAAG,MAAS,EAAUA,EAAG,MAAS,EAAI,QAAU,CAAE,GAAII,EAAI,MAAML,CAAI,CAAE,CAAE,OAAOG,EAAM,EARzavC,EAkI9B,IAlIyC2C,AAIlG,SAAqC1E,CAAC,CAAE2E,CAAM,EAAI,GAAK3E,GAAW,GAAI,AAAa,UAAb,OAAOA,EAAgB,OAAO8B,EAAkB9B,EA8H7D,GA9HyE,IAAIC,EAAIJ,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAACG,GAAG,KAAK,CAAC,EAAG,IAAkE,GAAzDC,AAAM,WAANA,GAAkBD,EAAE,WAAW,EAAEC,CAAAA,EAAID,EAAE,WAAW,CAAC,IAAI,AAAD,EAAOC,AAAM,QAANA,GAAeA,AAAM,QAANA,EAAa,OAAOiC,MAAM,IAAI,CAAClC,GAAI,GAAIC,AAAM,cAANA,GAAqB,2CAA2C,IAAI,CAACA,GAAI,OAAO6B,EAAkB9B,EAAG2E,GAAS,EAJjS5C,EAkIrE,IAlIgF6C,AAEzI,WAA8B,MAAM,AAAIC,UAAU,4IAA8I,IAiI1LrC,EAAYsB,CAAgB,CAAC,EAAE,CAC/BgB,EAAehB,CAAgB,CAAC,EAAE,CAElCiB,EAAYtD,EAAO,OAAU,CAAC,WAAW,CAAC,SAAUuD,CAAK,EAC3D,IAAIC,EAAKD,EAAM,EAAE,CACbnB,EAAWmB,EAAM,QAAQ,CAC7B,OAAOC,GAAMC,AAiEjB,SAAuBC,CAAI,EACzB,MAAOC,AAfT,UAASA,EAAgBD,CAAI,EAC3B,IAAIE,EAAO,GAUX,MARI,AAAgB,UAAhB,OAAOF,EACTE,GAAQF,EACCjD,MAAM,OAAO,CAACiD,GACvBE,GAAQF,EAAK,GAAG,CAACC,GAAiB,IAAI,CAAC,IAC9BD,EAAK,KAAK,CAAC,QAAQ,EAC5BE,CAAAA,GAAQD,EAAgBD,EAAK,KAAK,CAAC,QAAQ,GAGtCE,CACT,GAGyBF,GAAM,WAAW,GAEvC,OAAO,CAAC,iBAAkB,IAC1B,OAAO,CAAC,OAAQ,IACnB,EAtE+BtB,EAC7B,EAAG,EAAE,EAEDnB,EAAmBjB,EAAO,OAAU,CAAC,WAAW,CAAC,SAAUY,CAAK,EAClE,OAAO0C,EAAU1C,GAAS,MAC5B,EAAG,CAAC0C,EAAU,EAEVpC,EAAgBlB,EAAO,OAAU,CAAC,WAAW,CAAC,SAAUY,CAAK,EAC/D,OAAO0C,EAAU1C,GAAS,OAC5B,EAAG,CAAC0C,EAAU,EAIdtD,EAAO,OAAU,CAAC,SAAS,CAAC,WAC1B,OAAOqD,EAAa,IAAId,IAC1B,EAAG,EAAE,EAEL,IAAIpB,EAAWnB,EAAO,OAAU,CAAC,WAAW,CAAC,SAAUsB,CAAQ,EAS7D,OARA+B,EAAa,SAAUtC,CAAS,EAC9B,IAAI8C,EAAQ,IAAItB,IAAIxB,GAEpB,OADI,AAAC8C,EAAM,GAAG,CAACvC,EAAS,KAAK,GAAGuC,EAAM,GAAG,CAACvC,EAAS,KAAK,CAAEA,GACnDuC,CACT,GAIO,WACLR,EAAa,SAAUtC,CAAS,EAC9B,IAAI8C,EAAQ,IAAItB,IAAIxB,GAEpB,OADA8C,EAAM,MAAS,CAACvC,EAAS,KAAK,EACvBuC,CACT,EACF,CACF,EAAG,EAAE,EAEL,OAAoB7D,EAAO,OAAU,CAAC,aAAa,CAACU,EAAiB,QAAQ,CAAE,CAC7E,MAAO,CACL,UAAWK,EACX,iBAAkBC,EAClB,iBAAkBC,EAClB,cAAeC,EACf,SAAUC,CACZ,CACF,EAAGiB,EACL,CAEArC,CAAAA,EAAQ,iBAAiB,CAAGmC,EAC5BA,EAAkB,YAAY,CAAG,CAC/B,iBAAkB,iBACpB,C,sHCrMC,gB,gqEAWM,SAAS4B,EAAiBlD,CAAkF,EAC/G,IAAMmD,EAAYvE,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAA8B,MAE2BwE,EAAAA,EAAuC,OAC3GpD,GAAAA,CACH,aAAc,W,OAAM,I,EACpB,gBAAiB,CAAE,YAAamD,CAAU,C,IAHtCE,EAAmED,EAAnEC,GAAG,CAAEC,EAA8DF,EAA9DE,MAAM,CAAEC,EAAsDH,EAAtDG,eAAe,CAAEC,EAAqCJ,EAArCI,OAAO,CAAEC,EAA4BL,EAA5BK,SAAS,CAAEC,EAAiBN,EAAjBM,YAAY,CAMtE,OACI,gBAAC,OAAI,GAAG,mB,EACJ,gBAACC,EAAAA,EAAMA,CAAAA,CACH,IAAKN,EACL,OAAQC,EACR,gBAAiBC,EACjB,QAASC,EACT,YAAY,2BACZ,UAAWC,EACX,aAAcC,EACd,KAAMP,C,GAItB,CAEO,SAASS,EAAoCC,CAMnD,E,IANqDC,EAAFD,EAAEC,KAAK,CAAEC,EAATF,EAASE,OAAO,CAAEC,EAAlBH,EAAkBG,QAAQ,CAAEC,EAA5BJ,EAA4BI,YAAY,CAAEC,EAA1CL,EAA0CK,eAAe,CAc3EC,EAAAA,EAAAA,AAAAA,GAAAA,EAAAA,QAAAA,AAAAA,EAAyB,EAAE,KAAlDX,EAAuBW,CAAAA,CAAAA,EAAAA,CAAdC,EAAcD,CAAAA,CAAAA,EAAAA,CAERE,EAAAA,EAAAA,AAAAA,GAAAA,EAAAA,QAAAA,AAAAA,EAASN,GAAAA,GAAxBV,EAAegB,CAAAA,CAAAA,EAAAA,CAAVf,EAAUe,CAAAA,CAAAA,EAAAA,CAChBC,EAAa1F,AAAAA,GAAAA,EAAAA,MAAAA,AAAAA,EAAO,GAEQ2F,EAAAA,EAAAA,AAAAA,GAAAA,EAAAA,QAAAA,AAAAA,EAAoBN,GAAAA,GAA/CR,EAA2Bc,CAAAA,CAAAA,EAAAA,CAAhBb,EAAgBa,CAAAA,CAAAA,EAAAA,CAE5BC,EAAY,SAAOC,CAAS,M,0BAExBC,EAGAC,EAOAC,E,+pCALN,GANAtB,EAAOmB,GACDC,EAAU,EAAEJ,EAAW,OAAO,CACpCN,MAAAA,GAAAA,EAAWS,GAIPE,AAAe,UAAfA,AAFEA,CAAAA,EAAQE,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAMJ,EAAW,CAAE,KAAM,SAAUX,MAAAA,CAAM,EAAC,EAE9C,IAAI,CAEV,OADAM,EAAWO,EAAM,MAAM,CAAC,GAAG,CAAClH,SAAAA,CAAC,E,OAAK,OAAKA,GAAAA,CAAG,KAAM,O,MAChD,C,GAGS,O,EAAMqH,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,EAAa,CAAE,WAAY,CAAE,KAAM,SAAU,EAAGH,MAAAA,CAAM,G,eAAnEC,EAAO,SAETF,IAAYJ,EAAW,OAAO,EAE9BF,EACI,EAAIQ,AAAwBG,SAAxBH,EAAK,cAAc,CAAiB,CAAC,CAAE,KAAM,UAAoB,OAAQA,EAAK,cAAc,AAAC,E,YACjG,EAAGA,EAAK,KAAK,I,MAGzB,E,gLAE6CI,EAAAA,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EACzC3B,EACAI,EACAe,EACAd,EACAQ,GALIe,EAAqCD,EAArCC,QAAQ,CAAEC,EAA2BF,EAA3BE,sBAAsB,CAkBxC,MAVAC,AAAAA,GAAAA,EAAAA,SAAAA,AAAAA,EACI,WACSX,EAAUT,IACnB,EAEA,EAAE,EAKC,CACHV,IAAAA,EACA,OAAQ,SAAC+B,CAAM,EACNZ,EAAUY,GACfH,EAASG,EAAQ3B,EACrB,EACA,aAAc,SAAC4B,CAAY,EACvB3B,EAAa2B,GACbH,EAAuBG,EAC3B,EACA9B,gBAZoB+B,EAAAA,CAAgBA,CAapC7B,UAAAA,EACAD,QAAAA,CACJ,CACJ,C,+pCCnGO,SAAS+B,IACZ,IAAMC,EAAkBC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IAExB,OACI,gBAACC,EAAAA,CAAcA,CAAAA,KACX,gBAACC,EAAAA,CAAYA,CAAAA,KACT,gBAACrE,EAAAA,iBAAiBA,CAAAA,KACd,gBAAC,OAAI,UAAU,O,EACX,gBAAC,OAAI,UAAWkE,C,EAAiB,qBAEjC,gBAACI,EAAAA,CAAO,MAAM,2BAA2B,OAAO,KAAK,MAAM,W,EACvD,gBAAC,SAAE,qPAKH,gBAAC,SAAE,wLAIH,gBAAC1C,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,YAAY,QAAS,W,MAAM,kC,IACnD,gBAAC,SAAE,wCAEE,IACD,gBAAC,KAAE,KAAK,gB,EAAiB,QAAQ,KAGrC,gBAAC0C,EAAAA,CAAO,MAAM,QAAQ,OAAO,KAAK,MAAM,O,EACpC,gBAAC,SAAE,mHAGH,gBAAC1C,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,QAAQ,QAAS,W,MAAM,qC,IAC/C,gBAAC,SAAE,uCAEE,IACD,gBAAC,KAAE,KAAK,e,EAAgB,gBACvB,IAAI,aAIb,gBAAC0C,EAAAA,CAAO,MAAM,UAAU,OAAO,KAAK,MAAM,S,EACtC,gBAAC,SAAE,kHAGH,gBAAC1C,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,UAAU,QAAS,W,MAAM,oC,KAErD,gBAAC0C,EAAAA,CAAO,MAAM,eAAe,OAAO,KAAK,MAAM,c,EAC3C,gBAAC,SAAE,uLAGE,IACD,gBAAC,YAAK,SACL,KACD,gBAAC,YAAK,SAAY,sCAGtB,gBAAC1C,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,eAAe,QAAS,W,MAAM,sD,IACtD,gBAAC,SAAE,2DAEE,IACD,gBAAC,YAAK,iBACL,IAAI,gDAGT,gBAACA,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,eAAe,QAAS,W,MAAM,mE,KAE1D,gBAAC0C,EAAAA,CAAO,MAAM,cAAc,OAAO,KAAK,MAAM,a,EAC1C,gBAAC,SAAE,yCAEE,IACD,gBAAC,YAAK,mCACL,IAAI,8DAGT,gBAAC,UACG,gBAAC,UACG,gBAAC,YAAK,KAAQ,2CAGlB,gBAAC,UACG,gBAAC,YAAK,iBAAoB,qDAG9B,gBAAC,UACG,gBAAC,YAAK,MAAS,4CAGnB,gBAAC,UACG,gBAAC,YAAK,aAAgB,uCAI9B,gBAAC,SAAE,oHAGH,gBAAC1C,EAAAA,CAAgBA,CAAAA,CACb,MAAM,aACN,QACI,W,MACI,yJ,IAQZ,gBAAC,SAAE,6EAIP,gBAAC0C,EAAAA,CAAO,MAAM,cAAc,OAAO,KAAK,MAAM,a,EAC1C,gBAAC,SAAE,+HAIH,gBAAC,SAAE,+DAGH,gBAAC1C,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,cAAc,QAAS,W,MAAM,wB,IACrD,gBAAC,SAAE,6CAGH,gBAACA,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,cAAc,QAAS,W,MAAM,kD,IACrD,gBAAC,SAAE,wDAGH,gBAACA,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,cAAc,QAAS,W,MAAM,4D,IACrD,gBAAC,SAAE,gEAGH,gBAACA,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,cAAc,QAAS,W,MAAM,uB,KAEzD,gBAAC0C,EAAAA,CAAO,MAAM,eAAe,OAAO,KAAK,MAAM,c,EAC3C,gBAAC,SAAE,mFAGH,gBAACA,EAAAA,CAAO,MAAM,uBAAuB,OAAO,KAAK,MAAM,sB,EACnD,gBAAC,SAAE,6MAKH,gBAAC1C,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,eAAe,QAAS,W,MAAM,6B,IACtD,gBAAC,SAAE,+HAGH,gBAAC,SAAE,qDAGH,gBAACA,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,wBAAwB,QAAS,W,MAAM,8B,IAC/D,gBAAC,SAAE,uCAGH,gBAACA,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,6BAA6B,QAAS,W,MAAM,mC,IACpE,gBAAC,SAAE,4DAGH,gBAACA,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,sBAAsB,QAAS,W,MAAM,4D,IAC7D,gBAAC,SAAE,qCAGH,gBAACA,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,+BAA+B,QAAS,W,MAAM,uE,KAE1E,gBAAC0C,EAAAA,CAAO,MAAM,qBAAqB,OAAO,KAAK,MAAM,uB,EAAwB,uOAGzE,gBAAC1C,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,eAAe,QAAS,W,MAAM,mF,IACtD,gBAAC,SAAE,8GAGH,gBAAC,SAAE,6GAGH,gBAACA,EAAAA,CAAgBA,CAAAA,CAAC,MAAM,eAAe,QAAS,W,MAAM,sF,MAG9D,gBAAC0C,EAAAA,CAAO,MAAM,kBAAkB,OAAO,KAAK,MAAM,iB,EAC9C,gBAACA,EAAAA,CAAO,MAAM,gBAAgB,OAAO,KAAK,MAAM,e,EAC5C,gBAAC,SAAE,uEAGH,gBAACC,EAAAA,QAGT,gBAACD,EAAAA,CAAO,MAAM,0BAA0B,OAAO,KAAK,MAAM,W,EACtD,gBAAC,SAAE,oKAIH,gBAACE,EAAAA,SAIb,gBAAClF,EAAAA,SAASA,CAAAA,QAK9B,CAEA,SAASmF,EAAYC,CAAoC,CAAEC,CAAiB,CAAEC,CAAoB,EAC9F,IAAMC,EAAc,CAChB,MAAO,CACH,MAAO,OACP,eAAgB,WAChB,OAAQ,SACR,SAAU,OACV,MAAOH,EAAO,QAAQ,AAC1B,EACA,OAAQ,CACJ,OAAS,aAAmC,OAAvBA,EAAO,eAAe,EAC3C,QAAS,OACT,UAAW,OACX,cAAe,MACf,gBAAiBA,EAAO,UAAU,CAClC,WAAY,MAChB,EACA,KAAM,CACF,OAAS,aAAmC,OAAvBA,EAAO,eAAe,EAC3C,QAAS,OACT,UAAW,OACX,cAAe,KACnB,EACA,KAAM,CACF,gBAAiBA,EAAO,2BAA2B,CACnD,QAAS,UACT,aAAc,MACd,WAAY,2BACZ,SAAU,MACd,EACA,UAAW,CACP,KAAMA,EAAO,2BAA2B,CACxC,IAAKA,EAAO,UAAU,AAC1B,CACJ,EAEA,OACI,gBAAC,SAAM,MAAOG,EAAY,KAAK,A,EAC3B,gBAAC,aACG,gBAAC,UACIF,EAAQ,GAAG,CAAC,SAACG,CAAM,CAAE/E,CAAK,E,OACvB,gBAAC,MAAG,IAAKA,EAAO,MAAO8E,EAAY,MAAM,A,EACpCC,E,KAKjB,gBAAC,aACIF,EAAM,GAAG,CAAC,SAACG,CAAG,CAAEC,CAAQ,E,OACrB,gBAAC,MACG,IAAKA,EACL,MAAO,CACH,gBAAiBA,EAAW,GAAM,EAAIH,EAAY,SAAS,CAAC,IAAI,CAAGA,EAAY,SAAS,CAAC,GAAG,AAChG,C,EAECE,EAAI,GAAG,CAAC,SAACE,CAAI,CAAEC,CAAS,E,OACrB,gBAAC,MAAG,IAAKA,EAAW,MAAOL,EAAY,IAAI,A,EACtCI,E,OAQjC,CAEA,SAASV,IACL,IAAMG,EAASS,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IAGTP,EAAQrG,MAAM,IAAI,CAAC6G,EAAAA,EAAAA,CAAAA,OAA6B,IAAI,GAAG,CAAC,Y,aAAEC,EAAAA,CAAAA,CAAAA,EAAAA,CAAUC,EAAAA,CAAAA,CAAAA,EAAAA,C,MAAU,CAChF,gBAAC,QAAK,IAAI,WAAW,MAAO,CAAE,gBAAiBZ,EAAO,2BAA2B,CAAE,QAAS,UAAW,aAAc,MAAO,WAAY,2BAA8B,SAAU,MAAO,C,EAClLW,GAELC,EAAK,KAAK,EAAIA,EAAK,MAAM,CACnB,eACAA,EAAK,KAAK,CACN,QACAA,EAAK,MAAM,CACP,SACA,UACdA,EAAK,UAAU,CACfA,EAAK,WAAW,CAChBA,EAAK,QAAQ,CAAC,GAAG,CAAC,SAACC,CAAO,CAAEC,CAAY,E,OACpC,gBAAC,QAAK,IAAKA,C,EACP,gBAAC,QAAK,MAAO,CAAE,gBAAiBd,EAAO,2BAA2B,CAAE,QAAS,UAAW,aAAc,MAAO,WAAY,2BAA8B,SAAU,MAAO,C,EACnKa,GAEJC,EAAeF,EAAK,QAAQ,CAAC,MAAM,CAAG,GAAK,K,GAGvD,A,GAED,OAAOb,EAAYC,EAxBH,CAAC,WAAY,OAAQ,aAAc,cAAe,UAAU,CAwBxCE,EACxC,CAEA,SAASJ,IACL,IAAsD3B,EAAAA,EAAAA,AAAAA,GAAAA,EAAAA,QAAAA,AAAAA,EAAsB,IAAI4C,IAAIC,EAAAA,EAAkBA,GAAAA,GAA/FC,EAA+C9C,CAAAA,CAAAA,EAAAA,CAA1B+C,EAA0B/C,CAAAA,CAAAA,EAAAA,CAEhDgD,EAAgBC,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,EAAuB,SAGvCC,EAAsB,IAAI1F,IAG3B2F,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,O,IAAL,QAAKA,EAAAA,EAAuBhC,EAAAA,CAAgBA,CAAAA,OAAAA,QAAAA,CAAAA,GAAvCgC,CAAAA,CAAAA,EAAAA,AAAAA,CAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,AAAAA,EAAAA,EAAAA,GAAyC,CAAzCA,IACgBC,EADhBD,EAAAA,EAAAA,EAAAA,KAAAA,CAAAA,GAAOE,EAAAA,CAAAA,CAAAA,EAAAA,CAAMC,EAAAA,CAAAA,CAAAA,EAAAA,CACRC,EAAW,MAAAH,CAAAA,EAAAA,EAAM,aAAa,AAAD,EAAlBA,KAAAA,EAAAA,EAAqB,QAAQ,CAC9CI,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,EAAOD,AAAa3C,SAAb2C,EAAyB,YAAgB,OAALF,EAAK,uCAChD,IAAII,EAAMP,EAAoB,GAAG,CAACK,EACtB3C,UAAR6C,IACAA,EAAM,EAAE,CACRP,EAAoB,GAAG,CAACK,EAAUE,IAEtCA,EAAI,IAAI,CAAC,CAACJ,EAAMC,EAAM,CAC1B,C,UATKH,EAAAA,GAAAA,EAAAA,C,aAAAA,GAAAA,AAAAA,MAAAA,EAAAA,MAAAA,EAAAA,EAAAA,MAAAA,E,YAAAA,E,MAAAA,C,MAYAO,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,O,IAAL,QAAKA,EAAAA,EAAuBV,CAAa,CAAbA,OAAAA,QAAAA,CAAAA,GAAvBU,CAAAA,CAAAA,EAAAA,AAAAA,CAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,AAAAA,EAAAA,EAAAA,GAAsC,CAAtCA,IAIgBC,EAJhBD,EAAAA,EAAAA,EAAAA,KAAAA,CAAAA,GAAOE,EAAAA,CAAAA,CAAAA,EAAAA,CAAMC,EAAAA,CAAAA,CAAAA,EAAAA,CAEd,IAAI1C,EAAAA,CAAAA,CAAAA,GAAoB,CAACyC,IAEzB,IAAME,EAAAA,MAAWH,CAAAA,EAAAA,EAAM,aAAa,AAAD,EAAlBA,KAAAA,EAAAA,EAAqB,QAAQ,CAE9C,GADAH,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,EAAOM,AAAalD,SAAbkD,EAAyB,YAAgB,OAALF,EAAK,uCAC5Cf,EAAAA,EAAAA,CAAAA,QAA2B,CAACiB,GAAW,CACvC,IAAIC,EAAMb,EAAoB,GAAG,CAACY,EACtBlD,UAARmD,IACAA,EAAM,EAAE,CACRb,EAAoB,GAAG,CAACY,EAAUC,IAEtCA,EAAI,IAAI,CAAC,CAACH,EAAMC,EAAM,CAC1B,EACJ,C,UAdKH,EAAAA,GAAAA,EAAAA,C,aAAAA,GAAAA,AAAAA,MAAAA,EAAAA,MAAAA,EAAAA,EAAAA,MAAAA,E,YAAAA,E,MAAAA,C,EAiBL,IAAMM,EAAmB,IAAIxG,IACxByG,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,O,IAAL,QAAKA,EAAAA,EAAuB9C,EAAAA,CAAgBA,CAAAA,OAAAA,QAAAA,CAAAA,GAAvC8C,CAAAA,CAAAA,EAAAA,AAAAA,CAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,AAAAA,EAAAA,EAAAA,GAAyC,CAAzCA,IACiBC,EADjBD,EAAAA,EAAAA,EAAAA,KAAAA,CAAAA,GAAOE,EAAAA,CAAAA,CAAAA,EAAAA,CAAMC,EAAAA,CAAAA,CAAAA,EAAAA,CACRC,EAAY,MAAAH,CAAAA,EAAAA,EAAM,aAAa,AAAD,EAAlBA,KAAAA,EAAAA,EAAqB,kBAAkB,CACzD,GAAIG,AAAczD,SAAdyD,EAAyB,CACzB,IAAIC,EAAMN,EAAiB,GAAG,CAACK,EACnBzD,UAAR0D,IACAA,EAAM,EAAE,CACRN,EAAiB,GAAG,CAACK,EAAWC,IAEpCA,EAAI,IAAI,CAAC,CAACH,EAAMC,EAAM,CAC1B,CACJ,C,UAVKH,EAAAA,GAAAA,EAAAA,C,aAAAA,GAAAA,AAAAA,MAAAA,EAAAA,MAAAA,EAAAA,EAAAA,MAAAA,E,YAAAA,E,MAAAA,C,EAaL,IAAMM,EAAgB1B,EAAAA,EAAkBA,CAClC2B,EAAmB9I,MAAM,IAAI,CAACwH,EAAoB,OAAO,IAAI,IAAI,CAAC,SAACvJ,CAAC,CAAE8K,CAAC,EAGzE,OAAOC,AAFQH,EAAc,OAAO,CAAC5K,CAAC,CAAC,EAAE,EAC1B4K,EAAc,OAAO,CAACE,CAAC,CAAC,EAAE,CAE7C,GAEME,EAAiB,SAACpB,CAAQ,EAC5BR,EAAuB,SAAC6B,CAAI,EACxB,IAAMC,EAAS,IAAIjC,IAAIgC,GAOvB,OANIC,EAAO,GAAG,CAACtB,GACXsB,EAAO,MAAM,CAACtB,GAGdsB,EAAO,GAAG,CAACtB,GAERsB,CACX,EACJ,EAEA,OACI,gBAAC,WACIL,EAAiB,GAAG,CAAC,Y,aAAEjB,EAAAA,CAAAA,CAAAA,EAAAA,CAAUuB,EAAAA,CAAAA,CAAAA,EAAAA,CACxBC,EAAcjC,EAAoB,GAAG,CAACS,GAC5C,OACI,gBAAC,OAAI,IAAKA,C,EACN,gBAAC,OACG,MAAO,CACH,OAAQ,UACR,QAAS,OACT,WAAY,SACZ,IAAK,OACL,aAAc,MAClB,EACA,QAAS,WAAQoB,EAAepB,EAAU,C,EAE1C,gBAAC,QAAK,MAAO,CACT,SAAU,OACV,WAAY,iBACZ,UAAWwB,EAAc,eAAiB,eAC9C,C,EACC,KAGD,gBAAC,MAAG,GAAK,aAAqB,OAATxB,GAAY,MAAO,CAAE,OAAQ,CAAE,C,EAC/CyB,AAkJjC,SAA0BzB,CAA0B,EAChD,OAAQA,GACJ,IAAK,QACD,MAAO,mBACX,KAAK,OACD,MAAO,wBACX,KAAK,QACD,MAAO,iBACX,KAAK,OACD,MAAO,YACX,KAAK,MACD,MAAO,uBACX,KAAK,QACD,MAAO,mBACX,KAAK,OACD,MAAO,aACX,KAAK,QACD,MAAO,YACX,KAAK,aACD,MAAO,sBACX,KAAK,QACD,MAAO,iBACX,KAAK,SACD,MAAO,uBACf,CACJ,EA3KkDA,KAGzB,CAACwB,GAAgB,gBAACE,EAAAA,CAAyB,SAAU1B,EAAU,UAAWuB,C,GAGvF,GAIZ,CAEA,SAASG,EAAyBpJ,CAA+E,EAC7G,IAAMqJ,EAA8C,EAAE,CAChDC,EAAiB,IAAI3H,IACtB2F,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,O,IAAL,QAAKA,EAAAA,EAAuBtH,EAAM,SAAS,oBAAtCsH,CAAAA,CAAAA,EAAAA,AAAAA,CAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,AAAAA,EAAAA,EAAAA,GAAwC,CAAxCA,IACiBC,EADjBD,EAAAA,EAAAA,EAAAA,KAAAA,CAAAA,GAAOE,EAAAA,CAAAA,CAAAA,EAAAA,CAAMC,EAAAA,CAAAA,CAAAA,EAAAA,CACRe,EAAY,MAAAjB,CAAAA,EAAAA,EAAM,aAAa,AAAD,EAAlBA,KAAAA,EAAAA,EAAqB,kBAAkB,CACzD,GAAIiB,AAAczD,SAAdyD,EAAyB,CACzB,IAAIZ,EAAM0B,EAAe,GAAG,CAACd,EACjBzD,UAAR6C,IACAA,EAAM,EAAE,CACR0B,EAAe,GAAG,CAACd,EAAWZ,IAElCA,EAAI,IAAI,CAAC,CAACJ,EAAMC,EAAM,CAC1B,MAEI4B,EAAa,IAAI,CAAC,CAAC7B,EAAMC,EAAM,CAEvC,C,UAbKH,EAAAA,GAAAA,EAAAA,C,aAAAA,GAAAA,AAAAA,MAAAA,EAAAA,MAAAA,EAAAA,EAAAA,MAAAA,E,YAAAA,E,MAAAA,C,EAeL,OACI,gCACI,gBAAC,KAAE,MAAO,CAAE,WAAY,MAAO,C,EAAIiC,AA6I/C,SAAgC7B,CAA0B,EACtD,OAAQA,GACJ,IAAK,QACD,MAAO,4CACX,KAAK,OACD,MAAO,kFACX,KAAK,QACD,MAAO,+FACX,KAAK,OACD,MAAO,6EACX,KAAK,MACD,MAAO,sEACX,KAAK,QACD,MAAO,6DACX,KAAK,OACD,MAAO,6EACX,KAAK,QACD,MAAO,oEACX,KAAK,aACD,MAAO,uDACX,KAAK,QACD,MAAO,oEACX,KAAK,SACD,MAAO,wGACf,CACJ,EAtKsE1H,EAAM,QAAQ,GACvEqJ,EAAa,GAAG,CAAC,Y,aAAE7B,EAAAA,CAAAA,CAAAA,EAAAA,CAAMC,EAAAA,CAAAA,CAAAA,EAAAA,C,OACtB,gBAAC+B,EAAAA,CAAsB,IAAKhC,EAAM,KAAMA,EAAM,MAAOC,C,KAK9C5H,MAAM,IAAI,CAACyJ,EAAe,OAAO,IAAI,GAAG,CAAC,Y,aAAEd,EAAAA,CAAAA,CAAAA,EAAAA,CAAWiB,EAAAA,CAAAA,CAAAA,EAAAA,C,OACzD,gBAACC,EAAAA,CAA4B,IAAKlB,EAAW,UAAWA,EAAW,eAAgBiB,C,KAKvG,CAEA,SAASD,EAAsBxJ,CAAiD,EAC5E,IAmBiB2J,EAEJC,EAwBAC,EA1BIF,EAnBX3D,EAASS,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IACf,OACI,gBAACb,EAAAA,CAAO,IAAK5F,EAAM,IAAI,CAAE,MAAOA,EAAM,IAAI,CAAE,OAAO,KAAK,MAAQ,YAAsB,OAAXA,EAAM,IAAI,C,EACjF,gBAAC,OAAI,MAAO,CAAE,aAAc,OAAQ,WAAY,MAAO,C,EACnD,gBAAC,OAAI,MAAO,CAAE,aAAc,MAAO,C,EAAG,QAElC,gBAAC,QAAK,MAAO,CACT,gBAAiBgG,EAAO,2BAA2B,CACnD,QAAS,UACT,aAAc,MACd,WAAY,2BACZ,SAAU,OACV,WAAY,MAChB,C,EAEK8D,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAW9J,EAAM,KAAK,CAAC,IAAI,IAGpC,gBAAC,OAAI,MAAO,CAAE,aAAc,MAAO,C,EAC9B2J,MAAAA,CAAAA,EAAAA,MAAAA,CAAAA,EAAAA,EAAM,KAAK,CAAC,aAAa,AAAD,EAAxBA,KAAAA,EAAAA,EAA2B,eAAe,AAAD,EAAzCA,EAA8C,6BAElDC,AAAAA,OAAAA,CAAAA,EAAAA,EAAM,KAAK,CAAC,aAAa,AAAD,EAAxBA,KAAAA,EAAAA,EAA2B,SAAS,AAAD,GAAKpM,OAAO,IAAI,CAACwC,EAAM,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,MAAM,CAAG,GAC/F,gBAAC,OAAI,MAAO,CAAE,aAAc,MAAO,C,EAC/B,gBAAC,cAAO,oBACR,gBAAC,MAAG,MAAO,CAAE,OAAQ,cAAe,C,EAC/BxC,OAAO,OAAO,CAACwC,EAAM,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,GAAG,CAAC,Y,aAAE+J,EAAAA,CAAAA,CAAAA,EAAAA,CAASC,EAAAA,CAAAA,CAAAA,EAAAA,C,OAChE,gBAAC,MAAG,IAAKD,C,EACL,gBAAC,QAAK,MAAO,CACT,gBAAiB/D,EAAO,2BAA2B,CACnD,QAAS,UACT,aAAc,MACd,WAAY,2BACZ,SAAU,MACd,C,EAEK+D,GACE,IAEN,IACAC,E,KAMpBH,AAAAA,OAAAA,CAAAA,EAAAA,EAAM,KAAK,CAAC,aAAa,AAAD,EAAxBA,KAAAA,EAAAA,EAA2B,SAAS,AAAD,GAChC,gBAAC,OACG,MAAO,CACH,aAAc,OACd,MAAO7D,EAAO,QAAQ,CACtB,UAAW,QACf,C,EACH,gCAOrB,CAEA,SAAS0D,EAA4B1J,CAAuF,EACxH,IAAMgG,EAASS,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IAETP,EAAQlG,EAAM,cAAc,CAAC,GAAG,CAAC,Y,IAe9BiK,EACAnC,EADAmC,E,SAfgCzC,EAAAA,CAAAA,CAAAA,EAAAA,CAAMC,EAAAA,CAAAA,CAAAA,EAAAA,C,MAAW,CACtD,gBAAC,QAAK,IAAI,OAAO,MAAO,CAAE,WAAY,0BAA6B,C,EAAID,GACvE,gBAAC,QACG,IAAI,OACJ,MAAO,CACH,gBAAiBxB,EAAO,2BAA2B,CACnD,QAAS,UACT,aAAc,MACd,WAAY,2BACZ,SAAU,MACd,C,EAEC8D,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAWrC,EAAM,IAAI,GAE1B,gBAAC,QAAK,IAAI,a,EACLwC,MAAAA,CAAAA,EAAAA,MAAAA,CAAAA,EAAAA,EAAM,aAAa,AAAD,EAAlBA,KAAAA,EAAAA,EAAqB,eAAe,AAAD,EAAnCA,EAAwC,4BACxCnC,AAAAA,OAAAA,CAAAA,EAAAA,EAAM,aAAa,AAAD,EAAlBA,KAAAA,EAAAA,EAAqB,SAAS,AAAD,GAC1B,gBAAC,QAAK,IAAI,oBAAoB,MAAO,CAAE,UAAW,SAAU,MAAO9B,EAAO,QAAQ,AAAC,C,EAC9E,IAAI,cAKpB,A,GAED,OACI,gBAAC,OAAI,IAAKhG,EAAM,SAAS,CAAE,MAAO,CAAE,UAAW,OAAQ,WAAY,MAAO,C,EACtE,gBAAC,MAAG,MAAO,CAAE,aAAc,MAAO,C,EAAIkK,AA6DlD,SAAuB1B,CAA6B,EAChD,OAAQA,GACJ,IAAK,oBACD,MAAO,4BACX,KAAK,aACD,MAAO,qBACX,KAAK,mBACD,MAAO,wBACX,KAAK,oBACD,MAAO,uBACX,KAAK,sBACD,MAAO,qBACX,KAAK,0BACD,MAAO,yBACX,KAAK,wBACD,MAAO,uBACf,CACJ,EA9EgExI,EAAM,SAAS,GACnE,gBAAC,KAAE,MAAO,CAAE,aAAc,MAAO,C,EAAImK,AA+EjD,SAA6B3B,CAA6B,EACtD,OAAQA,GACJ,IAAK,oBACD,MAAO,4HACX,KAAK,aACD,MAAO,0FACX,KAAK,mBACD,MAAO,qFACX,KAAK,oBACD,MAAO,oFACX,KAAK,sBACD,MAAO,kGACX,KAAK,0BACD,MAAO,wFACX,KAAK,wBACD,MAAO,+BACf,CACJ,EAhGqExI,EAAM,SAAS,GACvE+F,EAAYC,EA9BL,CAAC,OAAQ,OAAQ,cAAc,CA8BTE,GAG1C,CA8FA,SAASN,EAAO5F,CAA6G,EACzH,OACI,gCACI,gBAACA,EAAM,MAAM,EAAC,GAAIA,EAAM,KAAK,A,EACxBA,EAAM,KAAK,EAEfA,EAAM,QAAQ,CAG3B,C"}